# This file was automatically generated by SWIG (http://www.swig.org).
# Version 1.3.40
#
# Do not make changes to this file unless you know what you are doing--modify
# the SWIG interface file instead.
# This file is compatible with both classic and new-style classes.

from sys import version_info
if version_info >= (2,6,0):
    def swig_import_helper():
        from os.path import dirname
        import imp
        fp = None
        try:
            fp, pathname, description = imp.find_module('_axon', [dirname(__file__)])
        except ImportError:
            import _axon
            return _axon
        if fp is not None:
            try:
                _mod = imp.load_module('_axon', fp, pathname, description)
            finally:
                fp.close()
            return _mod
    _axon = swig_import_helper()
    del swig_import_helper
else:
    import _axon
del version_info
try:
    _swig_property = property
except NameError:
    pass # Python < 2.2 doesn't have 'property'.
def _swig_setattr_nondynamic(self,class_type,name,value,static=1):
    if (name == "thisown"): return self.this.own(value)
    if (name == "this"):
        if type(value).__name__ == 'SwigPyObject':
            self.__dict__[name] = value
            return
    method = class_type.__swig_setmethods__.get(name,None)
    if method: return method(self,value)
    if (not static) or hasattr(self,name):
        self.__dict__[name] = value
    else:
        raise AttributeError("You cannot add attributes to %s" % self)

def _swig_setattr(self,class_type,name,value):
    return _swig_setattr_nondynamic(self,class_type,name,value,0)

def _swig_getattr(self,class_type,name):
    if (name == "thisown"): return self.this.own()
    method = class_type.__swig_getmethods__.get(name,None)
    if method: return method(self)
    raise AttributeError(name)

def _swig_repr(self):
    try: strthis = "proxy of " + self.this.__repr__()
    except: strthis = ""
    return "<%s.%s; %s >" % (self.__class__.__module__, self.__class__.__name__, strthis,)

try:
    _object = object
    _newclass = 1
except AttributeError:
    class _object : pass
    _newclass = 0


class SwigPyIterator(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, SwigPyIterator, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, SwigPyIterator, name)
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined - class is abstract")
    __repr__ = _swig_repr
    __swig_destroy__ = _axon.delete_SwigPyIterator
    __del__ = lambda self : None;
    def value(self): return _axon.SwigPyIterator_value(self)
    def incr(self, n = 1): return _axon.SwigPyIterator_incr(self, n)
    def decr(self, n = 1): return _axon.SwigPyIterator_decr(self, n)
    def distance(self, *args): return _axon.SwigPyIterator_distance(self, *args)
    def equal(self, *args): return _axon.SwigPyIterator_equal(self, *args)
    def copy(self): return _axon.SwigPyIterator_copy(self)
    def next(self): return _axon.SwigPyIterator_next(self)
    def __next__(self): return _axon.SwigPyIterator___next__(self)
    def previous(self): return _axon.SwigPyIterator_previous(self)
    def advance(self, *args): return _axon.SwigPyIterator_advance(self, *args)
    def __eq__(self, *args): return _axon.SwigPyIterator___eq__(self, *args)
    def __ne__(self, *args): return _axon.SwigPyIterator___ne__(self, *args)
    def __iadd__(self, *args): return _axon.SwigPyIterator___iadd__(self, *args)
    def __isub__(self, *args): return _axon.SwigPyIterator___isub__(self, *args)
    def __add__(self, *args): return _axon.SwigPyIterator___add__(self, *args)
    def __sub__(self, *args): return _axon.SwigPyIterator___sub__(self, *args)
    def __iter__(self): return self
SwigPyIterator_swigregister = _axon.SwigPyIterator_swigregister
SwigPyIterator_swigregister(SwigPyIterator)

ABF_ADCCOUNT = _axon.ABF_ADCCOUNT
ABF_DACCOUNT = _axon.ABF_DACCOUNT
ABF_EPOCHCOUNT = _axon.ABF_EPOCHCOUNT
ABF_ADCUNITLEN = _axon.ABF_ADCUNITLEN
ABF_ADCNAMELEN_USER = _axon.ABF_ADCNAMELEN_USER
ABF_ADCNAMELEN = _axon.ABF_ADCNAMELEN
ABF_DACUNITLEN = _axon.ABF_DACUNITLEN
ABF_DACNAMELEN = _axon.ABF_DACNAMELEN
ABF_USERLISTLEN = _axon.ABF_USERLISTLEN
ABF_USERLISTCOUNT = _axon.ABF_USERLISTCOUNT
ABF_OLDFILECOMMENTLEN = _axon.ABF_OLDFILECOMMENTLEN
ABF_FILECOMMENTLEN = _axon.ABF_FILECOMMENTLEN
ABF_PATHLEN = _axon.ABF_PATHLEN
ABF_CREATORINFOLEN = _axon.ABF_CREATORINFOLEN
ABF_ARITHMETICOPLEN = _axon.ABF_ARITHMETICOPLEN
ABF_ARITHMETICUNITSLEN = _axon.ABF_ARITHMETICUNITSLEN
ABF_TAGCOMMENTLEN = _axon.ABF_TAGCOMMENTLEN
ABF_BLOCKSIZE = _axon.ABF_BLOCKSIZE
PCLAMP6_MAXSWEEPLENGTH = _axon.PCLAMP6_MAXSWEEPLENGTH
PCLAMP7_MAXSWEEPLEN_PERCHAN = _axon.PCLAMP7_MAXSWEEPLEN_PERCHAN
ABF_MAX_SWEEPS_PER_AVERAGE = _axon.ABF_MAX_SWEEPS_PER_AVERAGE
ABF_MAX_TRIAL_SAMPLES = _axon.ABF_MAX_TRIAL_SAMPLES
ABF_DIGI_UNKNOWN = _axon.ABF_DIGI_UNKNOWN
ABF_DIGI_DEMO = _axon.ABF_DIGI_DEMO
ABF_DIGI_MINIDIGI = _axon.ABF_DIGI_MINIDIGI
ABF_DIGI_DD132X = _axon.ABF_DIGI_DD132X
ABF_DIGI_OPUS = _axon.ABF_DIGI_OPUS
ABF_DIGI_PATCH = _axon.ABF_DIGI_PATCH
ABF_DIGI_DD1440 = _axon.ABF_DIGI_DD1440
ABF_DRAW_NONE = _axon.ABF_DRAW_NONE
ABF_DRAW_REALTIME = _axon.ABF_DRAW_REALTIME
ABF_DRAW_FULLSCREEN = _axon.ABF_DRAW_FULLSCREEN
ABF_DRAW_ENDOFRUN = _axon.ABF_DRAW_ENDOFRUN
ABF_DISPLAY_SUPERIMPOSED = _axon.ABF_DISPLAY_SUPERIMPOSED
ABF_DISPLAY_TILED = _axon.ABF_DISPLAY_TILED
ABF_DRAW_POINTS = _axon.ABF_DRAW_POINTS
ABF_DRAW_LINES = _axon.ABF_DRAW_LINES
ABF_DATAFILE = _axon.ABF_DATAFILE
ABF_PARAMFILE = _axon.ABF_PARAMFILE
ABF_ALLOWOVERLAP = _axon.ABF_ALLOWOVERLAP
ABF_DATAFILE_ABF1 = _axon.ABF_DATAFILE_ABF1
ABF_PARAMFILE_ABF1 = _axon.ABF_PARAMFILE_ABF1
ABF_DELTA_HOLDING0 = _axon.ABF_DELTA_HOLDING0
ABF_DELTA_HOLDING1 = _axon.ABF_DELTA_HOLDING1
ABF_DELTA_HOLDING2 = _axon.ABF_DELTA_HOLDING2
ABF_DELTA_HOLDING3 = _axon.ABF_DELTA_HOLDING3
ABF_DELTA_DIGITALOUTS = _axon.ABF_DELTA_DIGITALOUTS
ABF_DELTA_THRESHOLD = _axon.ABF_DELTA_THRESHOLD
ABF_DELTA_PRETRIGGER = _axon.ABF_DELTA_PRETRIGGER
ABF_DELTA_AUTOSAMPLE_GAIN = _axon.ABF_DELTA_AUTOSAMPLE_GAIN
ABF_DELTA_SIGNAL_GAIN = _axon.ABF_DELTA_SIGNAL_GAIN
ABF_NOAVERAGING = _axon.ABF_NOAVERAGING
ABF_SAVEAVERAGEONLY = _axon.ABF_SAVEAVERAGEONLY
ABF_AVERAGESAVEALL = _axon.ABF_AVERAGESAVEALL
ABF_INFINITEAVERAGE = _axon.ABF_INFINITEAVERAGE
ABF_SLIDINGAVERAGE = _axon.ABF_SLIDINGAVERAGE
ABF_UNDOPROMPT_ONABORT = _axon.ABF_UNDOPROMPT_ONABORT
ABF_UNDOPROMPT_ALWAYS = _axon.ABF_UNDOPROMPT_ALWAYS
ABF_TRIGGER_STARTEPISODE = _axon.ABF_TRIGGER_STARTEPISODE
ABF_TRIGGER_STARTRUN = _axon.ABF_TRIGGER_STARTRUN
ABF_TRIGGER_STARTTRIAL = _axon.ABF_TRIGGER_STARTTRIAL
ABF_TRIGGER_RISINGEDGE = _axon.ABF_TRIGGER_RISINGEDGE
ABF_TRIGGER_FALLINGEDGE = _axon.ABF_TRIGGER_FALLINGEDGE
ABF_DACFILE_SKIPFIRSTSWEEP = _axon.ABF_DACFILE_SKIPFIRSTSWEEP
ABF_DACFILE_USEALLSWEEPS = _axon.ABF_DACFILE_USEALLSWEEPS
ABF_INTEREPI_USEHOLDING = _axon.ABF_INTEREPI_USEHOLDING
ABF_INTEREPI_USELASTEPOCH = _axon.ABF_INTEREPI_USELASTEPOCH
ABF_SIMPLE_EXPRESSION = _axon.ABF_SIMPLE_EXPRESSION
ABF_RATIO_EXPRESSION = _axon.ABF_RATIO_EXPRESSION
ABF_FILTER_NONE = _axon.ABF_FILTER_NONE
ABF_FILTER_EXTERNAL = _axon.ABF_FILTER_EXTERNAL
ABF_FILTER_SIMPLE_RC = _axon.ABF_FILTER_SIMPLE_RC
ABF_FILTER_BESSEL = _axon.ABF_FILTER_BESSEL
ABF_FILTER_BUTTERWORTH = _axon.ABF_FILTER_BUTTERWORTH
ABF_POSTPROCESS_FILTER_NONE = _axon.ABF_POSTPROCESS_FILTER_NONE
ABF_POSTPROCESS_FILTER_ADAPTIVE = _axon.ABF_POSTPROCESS_FILTER_ADAPTIVE
ABF_POSTPROCESS_FILTER_BESSEL = _axon.ABF_POSTPROCESS_FILTER_BESSEL
ABF_POSTPROCESS_FILTER_BOXCAR = _axon.ABF_POSTPROCESS_FILTER_BOXCAR
ABF_POSTPROCESS_FILTER_BUTTERWORTH = _axon.ABF_POSTPROCESS_FILTER_BUTTERWORTH
ABF_POSTPROCESS_FILTER_CHEBYSHEV = _axon.ABF_POSTPROCESS_FILTER_CHEBYSHEV
ABF_POSTPROCESS_FILTER_GAUSSIAN = _axon.ABF_POSTPROCESS_FILTER_GAUSSIAN
ABF_POSTPROCESS_FILTER_RC = _axon.ABF_POSTPROCESS_FILTER_RC
ABF_POSTPROCESS_FILTER_RC8 = _axon.ABF_POSTPROCESS_FILTER_RC8
ABF_POSTPROCESS_FILTER_NOTCH = _axon.ABF_POSTPROCESS_FILTER_NOTCH
ABF_DIGITAL_OUT_CHANNEL = _axon.ABF_DIGITAL_OUT_CHANNEL
ABF_PADDING_OUT_CHANNEL = _axon.ABF_PADDING_OUT_CHANNEL
ABF_AUTOANALYSE_DISABLED = _axon.ABF_AUTOANALYSE_DISABLED
ABF_AUTOANALYSE_DEFAULT = _axon.ABF_AUTOANALYSE_DEFAULT
ABF_AUTOANALYSE_RUNMACRO = _axon.ABF_AUTOANALYSE_RUNMACRO
ABF_PEAK_SEARCH_SPECIFIED = _axon.ABF_PEAK_SEARCH_SPECIFIED
ABF_PEAK_SEARCH_ALL = _axon.ABF_PEAK_SEARCH_ALL
ABF_PEAK_BASELINE_SPECIFIED = _axon.ABF_PEAK_BASELINE_SPECIFIED
ABF_PEAK_BASELINE_NONE = _axon.ABF_PEAK_BASELINE_NONE
ABF_PEAK_BASELINE_FIRSTHOLDING = _axon.ABF_PEAK_BASELINE_FIRSTHOLDING
ABF_PEAK_BASELINE_LASTHOLDING = _axon.ABF_PEAK_BASELINE_LASTHOLDING
ABF_PEAK_SEARCH_REGION0 = _axon.ABF_PEAK_SEARCH_REGION0
ABF_PEAK_SEARCH_REGION1 = _axon.ABF_PEAK_SEARCH_REGION1
ABF_PEAK_SEARCH_REGION2 = _axon.ABF_PEAK_SEARCH_REGION2
ABF_PEAK_SEARCH_REGION3 = _axon.ABF_PEAK_SEARCH_REGION3
ABF_PEAK_SEARCH_REGION4 = _axon.ABF_PEAK_SEARCH_REGION4
ABF_PEAK_SEARCH_REGION5 = _axon.ABF_PEAK_SEARCH_REGION5
ABF_PEAK_SEARCH_REGION6 = _axon.ABF_PEAK_SEARCH_REGION6
ABF_PEAK_SEARCH_REGION7 = _axon.ABF_PEAK_SEARCH_REGION7
ABF_PEAK_SEARCH_REGIONALL = _axon.ABF_PEAK_SEARCH_REGIONALL
ABF_PEAK_SEARCH_CHANNEL0 = _axon.ABF_PEAK_SEARCH_CHANNEL0
ABF_PEAK_SEARCH_CHANNEL1 = _axon.ABF_PEAK_SEARCH_CHANNEL1
ABF_PEAK_SEARCH_CHANNEL2 = _axon.ABF_PEAK_SEARCH_CHANNEL2
ABF_PEAK_SEARCH_CHANNEL3 = _axon.ABF_PEAK_SEARCH_CHANNEL3
ABF_PEAK_SEARCH_CHANNEL4 = _axon.ABF_PEAK_SEARCH_CHANNEL4
ABF_PEAK_SEARCH_CHANNEL5 = _axon.ABF_PEAK_SEARCH_CHANNEL5
ABF_PEAK_SEARCH_CHANNEL6 = _axon.ABF_PEAK_SEARCH_CHANNEL6
ABF_PEAK_SEARCH_CHANNEL7 = _axon.ABF_PEAK_SEARCH_CHANNEL7
ABF_PEAK_SEARCH_CHANNEL8 = _axon.ABF_PEAK_SEARCH_CHANNEL8
ABF_PEAK_SEARCH_CHANNEL9 = _axon.ABF_PEAK_SEARCH_CHANNEL9
ABF_PEAK_SEARCH_CHANNEL10 = _axon.ABF_PEAK_SEARCH_CHANNEL10
ABF_PEAK_SEARCH_CHANNEL11 = _axon.ABF_PEAK_SEARCH_CHANNEL11
ABF_PEAK_SEARCH_CHANNEL12 = _axon.ABF_PEAK_SEARCH_CHANNEL12
ABF_PEAK_SEARCH_CHANNEL13 = _axon.ABF_PEAK_SEARCH_CHANNEL13
ABF_PEAK_SEARCH_CHANNEL14 = _axon.ABF_PEAK_SEARCH_CHANNEL14
ABF_PEAK_SEARCH_CHANNEL15 = _axon.ABF_PEAK_SEARCH_CHANNEL15
ABF_PEAK_SEARCH_CHANNELSALL = _axon.ABF_PEAK_SEARCH_CHANNELSALL
ABF_LEAKSUBTRACT_NONE = _axon.ABF_LEAKSUBTRACT_NONE
ABF_LEAKSUBTRACT_PN = _axon.ABF_LEAKSUBTRACT_PN
ABF_LEAKSUBTRACT_RESISTIVE = _axon.ABF_LEAKSUBTRACT_RESISTIVE
ABF_PN_OPPOSITE_POLARITY = _axon.ABF_PN_OPPOSITE_POLARITY
ABF_PN_SAME_POLARITY = _axon.ABF_PN_SAME_POLARITY
ABF_PN_BEFORE_EPISODE = _axon.ABF_PN_BEFORE_EPISODE
ABF_PN_AFTER_EPISODE = _axon.ABF_PN_AFTER_EPISODE
ABF_AUTOSAMPLEDISABLED = _axon.ABF_AUTOSAMPLEDISABLED
ABF_AUTOSAMPLEAUTOMATIC = _axon.ABF_AUTOSAMPLEAUTOMATIC
ABF_AUTOSAMPLEMANUAL = _axon.ABF_AUTOSAMPLEMANUAL
ABF_INST_UNKNOWN = _axon.ABF_INST_UNKNOWN
ABF_INST_AXOPATCH1 = _axon.ABF_INST_AXOPATCH1
ABF_INST_AXOPATCH1_1 = _axon.ABF_INST_AXOPATCH1_1
ABF_INST_AXOPATCH1B = _axon.ABF_INST_AXOPATCH1B
ABF_INST_AXOPATCH1B_1 = _axon.ABF_INST_AXOPATCH1B_1
ABF_INST_AXOPATCH201 = _axon.ABF_INST_AXOPATCH201
ABF_INST_AXOPATCH202 = _axon.ABF_INST_AXOPATCH202
ABF_INST_GENECLAMP = _axon.ABF_INST_GENECLAMP
ABF_INST_DAGAN3900 = _axon.ABF_INST_DAGAN3900
ABF_INST_DAGAN3900A = _axon.ABF_INST_DAGAN3900A
ABF_INST_DAGANCA1_1 = _axon.ABF_INST_DAGANCA1_1
ABF_INST_DAGANCA1 = _axon.ABF_INST_DAGANCA1
ABF_INST_DAGANCA10 = _axon.ABF_INST_DAGANCA10
ABF_INST_WARNER_OC725 = _axon.ABF_INST_WARNER_OC725
ABF_INST_WARNER_OC725C = _axon.ABF_INST_WARNER_OC725C
ABF_INST_AXOPATCH200B = _axon.ABF_INST_AXOPATCH200B
ABF_INST_DAGANPCONE0_1 = _axon.ABF_INST_DAGANPCONE0_1
ABF_INST_DAGANPCONE1 = _axon.ABF_INST_DAGANPCONE1
ABF_INST_DAGANPCONE10 = _axon.ABF_INST_DAGANPCONE10
ABF_INST_DAGANPCONE100 = _axon.ABF_INST_DAGANPCONE100
ABF_INST_WARNER_BC525C = _axon.ABF_INST_WARNER_BC525C
ABF_INST_WARNER_PC505 = _axon.ABF_INST_WARNER_PC505
ABF_INST_WARNER_PC501 = _axon.ABF_INST_WARNER_PC501
ABF_INST_DAGANCA1_05 = _axon.ABF_INST_DAGANCA1_05
ABF_INST_MULTICLAMP700 = _axon.ABF_INST_MULTICLAMP700
ABF_INST_TURBO_TEC = _axon.ABF_INST_TURBO_TEC
ABF_INST_OPUSXPRESS6000 = _axon.ABF_INST_OPUSXPRESS6000
ABF_INST_AXOCLAMP900 = _axon.ABF_INST_AXOCLAMP900
ABF_TIMETAG = _axon.ABF_TIMETAG
ABF_COMMENTTAG = _axon.ABF_COMMENTTAG
ABF_EXTERNALTAG = _axon.ABF_EXTERNALTAG
ABF_VOICETAG = _axon.ABF_VOICETAG
ABF_NEWFILETAG = _axon.ABF_NEWFILETAG
ABF_ANNOTATIONTAG = _axon.ABF_ANNOTATIONTAG
ABF_EXTERNALTAGCOMMENT = _axon.ABF_EXTERNALTAGCOMMENT
ABF_VOICETAGCOMMENT = _axon.ABF_VOICETAGCOMMENT
ABF_ENV_DONOTWRITE = _axon.ABF_ENV_DONOTWRITE
ABF_ENV_WRITEEACHTRIAL = _axon.ABF_ENV_WRITEEACHTRIAL
ABF_ENV_PROMPTEACHTRIAL = _axon.ABF_ENV_PROMPTEACHTRIAL
ABF_PEAK_NEGATIVE = _axon.ABF_PEAK_NEGATIVE
ABF_PEAK_ABSOLUTE = _axon.ABF_PEAK_ABSOLUTE
ABF_PEAK_POSITIVE = _axon.ABF_PEAK_POSITIVE
ABF_LTP_TYPE_NONE = _axon.ABF_LTP_TYPE_NONE
ABF_LTP_TYPE_BASELINE = _axon.ABF_LTP_TYPE_BASELINE
ABF_LTP_TYPE_INDUCTION = _axon.ABF_LTP_TYPE_INDUCTION
ABF_LTP_DAC_USAGE_NONE = _axon.ABF_LTP_DAC_USAGE_NONE
ABF_LTP_DAC_USAGE_PRESYNAPTIC = _axon.ABF_LTP_DAC_USAGE_PRESYNAPTIC
ABF_LTP_DAC_USAGE_POSTSYNAPTIC = _axon.ABF_LTP_DAC_USAGE_POSTSYNAPTIC
ABF_EPISODICMODE = _axon.ABF_EPISODICMODE
ABF_CONTINUOUSMODE = _axon.ABF_CONTINUOUSMODE
ABF_VOLTAGECLAMP = _axon.ABF_VOLTAGECLAMP
ABF_CURRENTCLAMP = _axon.ABF_CURRENTCLAMP
ABF_SIMPLEACQUISITION = _axon.ABF_SIMPLEACQUISITION
ABF_FILTERDISABLED = _axon.ABF_FILTERDISABLED
ABF_UNUSED_CHANNEL = _axon.ABF_UNUSED_CHANNEL
ABF_INTEGERDATA = _axon.ABF_INTEGERDATA
ABF_FLOATDATA = _axon.ABF_FLOATDATA
ABF_VARLENEVENTS = _axon.ABF_VARLENEVENTS
ABF_FIXLENEVENTS = _axon.ABF_FIXLENEVENTS
ABF_LOSSFREEOSC = _axon.ABF_LOSSFREEOSC
ABF_GAPFREEFILE = _axon.ABF_GAPFREEFILE
ABF_HIGHSPEEDOSC = _axon.ABF_HIGHSPEEDOSC
ABF_WAVEFORMFILE = _axon.ABF_WAVEFORMFILE
ABF_EPOCHDISABLED = _axon.ABF_EPOCHDISABLED
ABF_EPOCHSTEPPED = _axon.ABF_EPOCHSTEPPED
ABF_EPOCHRAMPED = _axon.ABF_EPOCHRAMPED
ABF_EPOCH_TYPE_RECTANGLE = _axon.ABF_EPOCH_TYPE_RECTANGLE
ABF_EPOCH_TYPE_TRIANGLE = _axon.ABF_EPOCH_TYPE_TRIANGLE
ABF_EPOCH_TYPE_COSINE = _axon.ABF_EPOCH_TYPE_COSINE
ABF_EPOCH_TYPE_UNUSED = _axon.ABF_EPOCH_TYPE_UNUSED
ABF_EPOCH_TYPE_BIPHASIC = _axon.ABF_EPOCH_TYPE_BIPHASIC
ABF_MIN_EPOCH_RESISTANCE_DURATION = _axon.ABF_MIN_EPOCH_RESISTANCE_DURATION
ABF_WAVEFORMDISABLED = _axon.ABF_WAVEFORMDISABLED
ABF_EPOCHTABLEWAVEFORM = _axon.ABF_EPOCHTABLEWAVEFORM
ABF_DACFILEWAVEFORM = _axon.ABF_DACFILEWAVEFORM
ABF_ABFFILE = _axon.ABF_ABFFILE
ABF_FETCHEX = _axon.ABF_FETCHEX
ABF_CLAMPEX = _axon.ABF_CLAMPEX
ABF_CTPULSECOUNT_MAX = _axon.ABF_CTPULSECOUNT_MAX
ABF_CTBASELINEDURATION_MAX = _axon.ABF_CTBASELINEDURATION_MAX
ABF_CTSTEPDURATION_MAX = _axon.ABF_CTSTEPDURATION_MAX
ABF_CTPOSTTRAINDURATION_MAX = _axon.ABF_CTPOSTTRAINDURATION_MAX
ABF_SWEEPSTARTTOSTARTTIME_MAX = _axon.ABF_SWEEPSTARTTOSTARTTIME_MAX
ABF_PNPULSECOUNT_MAX = _axon.ABF_PNPULSECOUNT_MAX
ABF_DIGITALVALUE_MAX = _axon.ABF_DIGITALVALUE_MAX
ABF_EPOCHDIGITALVALUE_MAX = _axon.ABF_EPOCHDIGITALVALUE_MAX
ABF_TRIGGERLINEINPUT = _axon.ABF_TRIGGERLINEINPUT
ABF_TRIGGERTAGINPUT = _axon.ABF_TRIGGERTAGINPUT
ABF_TRIGGERFIRSTCHANNEL = _axon.ABF_TRIGGERFIRSTCHANNEL
ABF_TRIGGEREXTERNAL = _axon.ABF_TRIGGEREXTERNAL
ABF_TRIGGERSPACEBAR = _axon.ABF_TRIGGERSPACEBAR
ABF_TRIALTRIGGER_SWSTARTONLY = _axon.ABF_TRIALTRIGGER_SWSTARTONLY
ABF_TRIALTRIGGER_SWSTARTSTOP = _axon.ABF_TRIALTRIGGER_SWSTARTSTOP
ABF_TRIALTRIGGER_LINEINPUT = _axon.ABF_TRIALTRIGGER_LINEINPUT
ABF_TRIALTRIGGER_SPACEBAR = _axon.ABF_TRIALTRIGGER_SPACEBAR
ABF_TRIALTRIGGER_EXTERNAL = _axon.ABF_TRIALTRIGGER_EXTERNAL
ABF_TRIALTRIGGER_NONE = _axon.ABF_TRIALTRIGGER_NONE
ABF_STATISTICS_ABOVETHRESHOLD = _axon.ABF_STATISTICS_ABOVETHRESHOLD
ABF_STATISTICS_EVENTFREQUENCY = _axon.ABF_STATISTICS_EVENTFREQUENCY
ABF_STATISTICS_MEANOPENTIME = _axon.ABF_STATISTICS_MEANOPENTIME
ABF_STATISTICS_MEANCLOSEDTIME = _axon.ABF_STATISTICS_MEANCLOSEDTIME
ABF_STATISTICS_ALL = _axon.ABF_STATISTICS_ALL
ABF_STATISTICS_NOAUTOSAVE = _axon.ABF_STATISTICS_NOAUTOSAVE
ABF_STATISTICS_AUTOSAVE = _axon.ABF_STATISTICS_AUTOSAVE
ABF_STATISTICS_AUTOSAVE_AUTOCLEAR = _axon.ABF_STATISTICS_AUTOSAVE_AUTOCLEAR
ABF_STATISTICS_DISPLAY = _axon.ABF_STATISTICS_DISPLAY
ABF_STATISTICS_NODISPLAY = _axon.ABF_STATISTICS_NODISPLAY
ABF_STATISTICS_NOCLEAR = _axon.ABF_STATISTICS_NOCLEAR
ABF_STATISTICS_CLEAR = _axon.ABF_STATISTICS_CLEAR
ABF_STATS_REGIONS = _axon.ABF_STATS_REGIONS
ABF_BASELINE_REGIONS = _axon.ABF_BASELINE_REGIONS
ABF_STATS_NUM_MEASUREMENTS = _axon.ABF_STATS_NUM_MEASUREMENTS
ABF_PEAK_MEASURE_PEAK = _axon.ABF_PEAK_MEASURE_PEAK
ABF_PEAK_MEASURE_PEAKTIME = _axon.ABF_PEAK_MEASURE_PEAKTIME
ABF_PEAK_MEASURE_ANTIPEAK = _axon.ABF_PEAK_MEASURE_ANTIPEAK
ABF_PEAK_MEASURE_ANTIPEAKTIME = _axon.ABF_PEAK_MEASURE_ANTIPEAKTIME
ABF_PEAK_MEASURE_MEAN = _axon.ABF_PEAK_MEASURE_MEAN
ABF_PEAK_MEASURE_STDDEV = _axon.ABF_PEAK_MEASURE_STDDEV
ABF_PEAK_MEASURE_INTEGRAL = _axon.ABF_PEAK_MEASURE_INTEGRAL
ABF_PEAK_MEASURE_MAXRISESLOPE = _axon.ABF_PEAK_MEASURE_MAXRISESLOPE
ABF_PEAK_MEASURE_MAXRISESLOPETIME = _axon.ABF_PEAK_MEASURE_MAXRISESLOPETIME
ABF_PEAK_MEASURE_MAXDECAYSLOPE = _axon.ABF_PEAK_MEASURE_MAXDECAYSLOPE
ABF_PEAK_MEASURE_MAXDECAYSLOPETIME = _axon.ABF_PEAK_MEASURE_MAXDECAYSLOPETIME
ABF_PEAK_MEASURE_RISETIME = _axon.ABF_PEAK_MEASURE_RISETIME
ABF_PEAK_MEASURE_DECAYTIME = _axon.ABF_PEAK_MEASURE_DECAYTIME
ABF_PEAK_MEASURE_HALFWIDTH = _axon.ABF_PEAK_MEASURE_HALFWIDTH
ABF_PEAK_MEASURE_BASELINE = _axon.ABF_PEAK_MEASURE_BASELINE
ABF_PEAK_MEASURE_RISESLOPE = _axon.ABF_PEAK_MEASURE_RISESLOPE
ABF_PEAK_MEASURE_DECAYSLOPE = _axon.ABF_PEAK_MEASURE_DECAYSLOPE
ABF_PEAK_MEASURE_REGIONSLOPE = _axon.ABF_PEAK_MEASURE_REGIONSLOPE
ABF_PEAK_NORMAL_PEAK = _axon.ABF_PEAK_NORMAL_PEAK
ABF_PEAK_NORMAL_ANTIPEAK = _axon.ABF_PEAK_NORMAL_ANTIPEAK
ABF_PEAK_NORMAL_MEAN = _axon.ABF_PEAK_NORMAL_MEAN
ABF_PEAK_NORMAL_STDDEV = _axon.ABF_PEAK_NORMAL_STDDEV
ABF_PEAK_NORMAL_INTEGRAL = _axon.ABF_PEAK_NORMAL_INTEGRAL
ABF_PEAK_NORMALISABLE = _axon.ABF_PEAK_NORMALISABLE
ABF_PEAK_NORMALISED = _axon.ABF_PEAK_NORMALISED
ABF_PEAK_MEASURE_ALL = _axon.ABF_PEAK_MEASURE_ALL
ABF_CONDITNUMPULSES = _axon.ABF_CONDITNUMPULSES
ABF_CONDITBASELINEDURATION = _axon.ABF_CONDITBASELINEDURATION
ABF_CONDITBASELINELEVEL = _axon.ABF_CONDITBASELINELEVEL
ABF_CONDITSTEPDURATION = _axon.ABF_CONDITSTEPDURATION
ABF_CONDITSTEPLEVEL = _axon.ABF_CONDITSTEPLEVEL
ABF_CONDITPOSTTRAINDURATION = _axon.ABF_CONDITPOSTTRAINDURATION
ABF_CONDITPOSTTRAINLEVEL = _axon.ABF_CONDITPOSTTRAINLEVEL
ABF_EPISODESTARTTOSTART = _axon.ABF_EPISODESTARTTOSTART
ABF_INACTIVEHOLDING = _axon.ABF_INACTIVEHOLDING
ABF_DIGITALHOLDING = _axon.ABF_DIGITALHOLDING
ABF_PNNUMPULSES = _axon.ABF_PNNUMPULSES
ABF_PARALLELVALUE = _axon.ABF_PARALLELVALUE
ABF_EPOCHINITLEVEL = _axon.ABF_EPOCHINITLEVEL
ABF_EPOCHINITDURATION = _axon.ABF_EPOCHINITDURATION
ABF_EPOCHTRAINPERIOD = _axon.ABF_EPOCHTRAINPERIOD
ABF_EPOCHTRAINPULSEWIDTH = _axon.ABF_EPOCHTRAINPULSEWIDTH
ABF_ERASE_EACHSWEEP = _axon.ABF_ERASE_EACHSWEEP
ABF_ERASE_EACHRUN = _axon.ABF_ERASE_EACHRUN
ABF_ERASE_EACHTRIAL = _axon.ABF_ERASE_EACHTRIAL
ABF_ERASE_DONTERASE = _axon.ABF_ERASE_DONTERASE
ABF_BACKGROUNDCOLOR = _axon.ABF_BACKGROUNDCOLOR
ABF_GRIDCOLOR = _axon.ABF_GRIDCOLOR
ABF_THRESHOLDCOLOR = _axon.ABF_THRESHOLDCOLOR
ABF_EVENTMARKERCOLOR = _axon.ABF_EVENTMARKERCOLOR
ABF_SEPARATORCOLOR = _axon.ABF_SEPARATORCOLOR
ABF_AVERAGECOLOR = _axon.ABF_AVERAGECOLOR
ABF_OLDDATACOLOR = _axon.ABF_OLDDATACOLOR
ABF_TEXTCOLOR = _axon.ABF_TEXTCOLOR
ABF_AXISCOLOR = _axon.ABF_AXISCOLOR
ABF_ACTIVEAXISCOLOR = _axon.ABF_ACTIVEAXISCOLOR
ABF_LASTCOLOR = _axon.ABF_LASTCOLOR
ABF_SCOPECOLORS = _axon.ABF_SCOPECOLORS
ABF_STATISTICS_REGION0 = _axon.ABF_STATISTICS_REGION0
ABF_STATISTICS_REGION1 = _axon.ABF_STATISTICS_REGION1
ABF_STATISTICS_REGION2 = _axon.ABF_STATISTICS_REGION2
ABF_STATISTICS_REGION3 = _axon.ABF_STATISTICS_REGION3
ABF_STATISTICS_REGION4 = _axon.ABF_STATISTICS_REGION4
ABF_STATISTICS_REGION5 = _axon.ABF_STATISTICS_REGION5
ABF_STATISTICS_REGION6 = _axon.ABF_STATISTICS_REGION6
ABF_STATISTICS_REGION7 = _axon.ABF_STATISTICS_REGION7
ABF_BASELINE_REGION = _axon.ABF_BASELINE_REGION
ABF_STOREDSWEEPCOLOR = _axon.ABF_STOREDSWEEPCOLOR
ABF_LASTCOLOR_EX = _axon.ABF_LASTCOLOR_EX
ABF_SCOPECOLORS_EX = _axon.ABF_SCOPECOLORS_EX
ABF_COMPRESSION_NONE = _axon.ABF_COMPRESSION_NONE
ABF_COMPRESSION_PKWARE = _axon.ABF_COMPRESSION_PKWARE
ABF_V200 = _axon.ABF_V200
ABF_V201 = _axon.ABF_V201
class MYGUID(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, MYGUID, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, MYGUID, name)
    __repr__ = _swig_repr
    __swig_setmethods__["Data1"] = _axon.MYGUID_Data1_set
    __swig_getmethods__["Data1"] = _axon.MYGUID_Data1_get
    if _newclass:Data1 = _swig_property(_axon.MYGUID_Data1_get, _axon.MYGUID_Data1_set)
    __swig_setmethods__["Data2"] = _axon.MYGUID_Data2_set
    __swig_getmethods__["Data2"] = _axon.MYGUID_Data2_get
    if _newclass:Data2 = _swig_property(_axon.MYGUID_Data2_get, _axon.MYGUID_Data2_set)
    __swig_setmethods__["Data3"] = _axon.MYGUID_Data3_set
    __swig_getmethods__["Data3"] = _axon.MYGUID_Data3_get
    if _newclass:Data3 = _swig_property(_axon.MYGUID_Data3_get, _axon.MYGUID_Data3_set)
    __swig_setmethods__["Data4"] = _axon.MYGUID_Data4_set
    __swig_getmethods__["Data4"] = _axon.MYGUID_Data4_get
    if _newclass:Data4 = _swig_property(_axon.MYGUID_Data4_get, _axon.MYGUID_Data4_set)
    def __init__(self): 
        this = _axon.new_MYGUID()
        try: self.this.append(this)
        except: self.this = this
    __swig_destroy__ = _axon.delete_MYGUID
    __del__ = lambda self : None;
MYGUID_swigregister = _axon.MYGUID_swigregister
MYGUID_swigregister(MYGUID)

class ABF_Section(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, ABF_Section, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, ABF_Section, name)
    __repr__ = _swig_repr
    __swig_setmethods__["uBlockIndex"] = _axon.ABF_Section_uBlockIndex_set
    __swig_getmethods__["uBlockIndex"] = _axon.ABF_Section_uBlockIndex_get
    if _newclass:uBlockIndex = _swig_property(_axon.ABF_Section_uBlockIndex_get, _axon.ABF_Section_uBlockIndex_set)
    __swig_setmethods__["uBytes"] = _axon.ABF_Section_uBytes_set
    __swig_getmethods__["uBytes"] = _axon.ABF_Section_uBytes_get
    if _newclass:uBytes = _swig_property(_axon.ABF_Section_uBytes_get, _axon.ABF_Section_uBytes_set)
    __swig_setmethods__["llNumEntries"] = _axon.ABF_Section_llNumEntries_set
    __swig_getmethods__["llNumEntries"] = _axon.ABF_Section_llNumEntries_get
    if _newclass:llNumEntries = _swig_property(_axon.ABF_Section_llNumEntries_get, _axon.ABF_Section_llNumEntries_set)
    def __init__(self): 
        this = _axon.new_ABF_Section()
        try: self.this.append(this)
        except: self.this = this
    __swig_destroy__ = _axon.delete_ABF_Section
    __del__ = lambda self : None;
ABF_Section_swigregister = _axon.ABF_Section_swigregister
ABF_Section_swigregister(ABF_Section)

ABF_FILESIGNATURE = _axon.ABF_FILESIGNATURE
class ABF_FileInfo(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, ABF_FileInfo, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, ABF_FileInfo, name)
    __repr__ = _swig_repr
    __swig_setmethods__["uFileSignature"] = _axon.ABF_FileInfo_uFileSignature_set
    __swig_getmethods__["uFileSignature"] = _axon.ABF_FileInfo_uFileSignature_get
    if _newclass:uFileSignature = _swig_property(_axon.ABF_FileInfo_uFileSignature_get, _axon.ABF_FileInfo_uFileSignature_set)
    __swig_setmethods__["uFileVersionNumber"] = _axon.ABF_FileInfo_uFileVersionNumber_set
    __swig_getmethods__["uFileVersionNumber"] = _axon.ABF_FileInfo_uFileVersionNumber_get
    if _newclass:uFileVersionNumber = _swig_property(_axon.ABF_FileInfo_uFileVersionNumber_get, _axon.ABF_FileInfo_uFileVersionNumber_set)
    __swig_setmethods__["uFileInfoSize"] = _axon.ABF_FileInfo_uFileInfoSize_set
    __swig_getmethods__["uFileInfoSize"] = _axon.ABF_FileInfo_uFileInfoSize_get
    if _newclass:uFileInfoSize = _swig_property(_axon.ABF_FileInfo_uFileInfoSize_get, _axon.ABF_FileInfo_uFileInfoSize_set)
    __swig_setmethods__["uActualEpisodes"] = _axon.ABF_FileInfo_uActualEpisodes_set
    __swig_getmethods__["uActualEpisodes"] = _axon.ABF_FileInfo_uActualEpisodes_get
    if _newclass:uActualEpisodes = _swig_property(_axon.ABF_FileInfo_uActualEpisodes_get, _axon.ABF_FileInfo_uActualEpisodes_set)
    __swig_setmethods__["uFileStartDate"] = _axon.ABF_FileInfo_uFileStartDate_set
    __swig_getmethods__["uFileStartDate"] = _axon.ABF_FileInfo_uFileStartDate_get
    if _newclass:uFileStartDate = _swig_property(_axon.ABF_FileInfo_uFileStartDate_get, _axon.ABF_FileInfo_uFileStartDate_set)
    __swig_setmethods__["uFileStartTimeMS"] = _axon.ABF_FileInfo_uFileStartTimeMS_set
    __swig_getmethods__["uFileStartTimeMS"] = _axon.ABF_FileInfo_uFileStartTimeMS_get
    if _newclass:uFileStartTimeMS = _swig_property(_axon.ABF_FileInfo_uFileStartTimeMS_get, _axon.ABF_FileInfo_uFileStartTimeMS_set)
    __swig_setmethods__["uStopwatchTime"] = _axon.ABF_FileInfo_uStopwatchTime_set
    __swig_getmethods__["uStopwatchTime"] = _axon.ABF_FileInfo_uStopwatchTime_get
    if _newclass:uStopwatchTime = _swig_property(_axon.ABF_FileInfo_uStopwatchTime_get, _axon.ABF_FileInfo_uStopwatchTime_set)
    __swig_setmethods__["nFileType"] = _axon.ABF_FileInfo_nFileType_set
    __swig_getmethods__["nFileType"] = _axon.ABF_FileInfo_nFileType_get
    if _newclass:nFileType = _swig_property(_axon.ABF_FileInfo_nFileType_get, _axon.ABF_FileInfo_nFileType_set)
    __swig_setmethods__["nDataFormat"] = _axon.ABF_FileInfo_nDataFormat_set
    __swig_getmethods__["nDataFormat"] = _axon.ABF_FileInfo_nDataFormat_get
    if _newclass:nDataFormat = _swig_property(_axon.ABF_FileInfo_nDataFormat_get, _axon.ABF_FileInfo_nDataFormat_set)
    __swig_setmethods__["nSimultaneousScan"] = _axon.ABF_FileInfo_nSimultaneousScan_set
    __swig_getmethods__["nSimultaneousScan"] = _axon.ABF_FileInfo_nSimultaneousScan_get
    if _newclass:nSimultaneousScan = _swig_property(_axon.ABF_FileInfo_nSimultaneousScan_get, _axon.ABF_FileInfo_nSimultaneousScan_set)
    __swig_setmethods__["nCRCEnable"] = _axon.ABF_FileInfo_nCRCEnable_set
    __swig_getmethods__["nCRCEnable"] = _axon.ABF_FileInfo_nCRCEnable_get
    if _newclass:nCRCEnable = _swig_property(_axon.ABF_FileInfo_nCRCEnable_get, _axon.ABF_FileInfo_nCRCEnable_set)
    __swig_setmethods__["uFileCRC"] = _axon.ABF_FileInfo_uFileCRC_set
    __swig_getmethods__["uFileCRC"] = _axon.ABF_FileInfo_uFileCRC_get
    if _newclass:uFileCRC = _swig_property(_axon.ABF_FileInfo_uFileCRC_get, _axon.ABF_FileInfo_uFileCRC_set)
    __swig_setmethods__["FileGUID"] = _axon.ABF_FileInfo_FileGUID_set
    __swig_getmethods__["FileGUID"] = _axon.ABF_FileInfo_FileGUID_get
    if _newclass:FileGUID = _swig_property(_axon.ABF_FileInfo_FileGUID_get, _axon.ABF_FileInfo_FileGUID_set)
    __swig_setmethods__["uCreatorVersion"] = _axon.ABF_FileInfo_uCreatorVersion_set
    __swig_getmethods__["uCreatorVersion"] = _axon.ABF_FileInfo_uCreatorVersion_get
    if _newclass:uCreatorVersion = _swig_property(_axon.ABF_FileInfo_uCreatorVersion_get, _axon.ABF_FileInfo_uCreatorVersion_set)
    __swig_setmethods__["uCreatorNameIndex"] = _axon.ABF_FileInfo_uCreatorNameIndex_set
    __swig_getmethods__["uCreatorNameIndex"] = _axon.ABF_FileInfo_uCreatorNameIndex_get
    if _newclass:uCreatorNameIndex = _swig_property(_axon.ABF_FileInfo_uCreatorNameIndex_get, _axon.ABF_FileInfo_uCreatorNameIndex_set)
    __swig_setmethods__["uModifierVersion"] = _axon.ABF_FileInfo_uModifierVersion_set
    __swig_getmethods__["uModifierVersion"] = _axon.ABF_FileInfo_uModifierVersion_get
    if _newclass:uModifierVersion = _swig_property(_axon.ABF_FileInfo_uModifierVersion_get, _axon.ABF_FileInfo_uModifierVersion_set)
    __swig_setmethods__["uModifierNameIndex"] = _axon.ABF_FileInfo_uModifierNameIndex_set
    __swig_getmethods__["uModifierNameIndex"] = _axon.ABF_FileInfo_uModifierNameIndex_get
    if _newclass:uModifierNameIndex = _swig_property(_axon.ABF_FileInfo_uModifierNameIndex_get, _axon.ABF_FileInfo_uModifierNameIndex_set)
    __swig_setmethods__["uProtocolPathIndex"] = _axon.ABF_FileInfo_uProtocolPathIndex_set
    __swig_getmethods__["uProtocolPathIndex"] = _axon.ABF_FileInfo_uProtocolPathIndex_get
    if _newclass:uProtocolPathIndex = _swig_property(_axon.ABF_FileInfo_uProtocolPathIndex_get, _axon.ABF_FileInfo_uProtocolPathIndex_set)
    __swig_setmethods__["ProtocolSection"] = _axon.ABF_FileInfo_ProtocolSection_set
    __swig_getmethods__["ProtocolSection"] = _axon.ABF_FileInfo_ProtocolSection_get
    if _newclass:ProtocolSection = _swig_property(_axon.ABF_FileInfo_ProtocolSection_get, _axon.ABF_FileInfo_ProtocolSection_set)
    __swig_setmethods__["ADCSection"] = _axon.ABF_FileInfo_ADCSection_set
    __swig_getmethods__["ADCSection"] = _axon.ABF_FileInfo_ADCSection_get
    if _newclass:ADCSection = _swig_property(_axon.ABF_FileInfo_ADCSection_get, _axon.ABF_FileInfo_ADCSection_set)
    __swig_setmethods__["DACSection"] = _axon.ABF_FileInfo_DACSection_set
    __swig_getmethods__["DACSection"] = _axon.ABF_FileInfo_DACSection_get
    if _newclass:DACSection = _swig_property(_axon.ABF_FileInfo_DACSection_get, _axon.ABF_FileInfo_DACSection_set)
    __swig_setmethods__["EpochSection"] = _axon.ABF_FileInfo_EpochSection_set
    __swig_getmethods__["EpochSection"] = _axon.ABF_FileInfo_EpochSection_get
    if _newclass:EpochSection = _swig_property(_axon.ABF_FileInfo_EpochSection_get, _axon.ABF_FileInfo_EpochSection_set)
    __swig_setmethods__["ADCPerDACSection"] = _axon.ABF_FileInfo_ADCPerDACSection_set
    __swig_getmethods__["ADCPerDACSection"] = _axon.ABF_FileInfo_ADCPerDACSection_get
    if _newclass:ADCPerDACSection = _swig_property(_axon.ABF_FileInfo_ADCPerDACSection_get, _axon.ABF_FileInfo_ADCPerDACSection_set)
    __swig_setmethods__["EpochPerDACSection"] = _axon.ABF_FileInfo_EpochPerDACSection_set
    __swig_getmethods__["EpochPerDACSection"] = _axon.ABF_FileInfo_EpochPerDACSection_get
    if _newclass:EpochPerDACSection = _swig_property(_axon.ABF_FileInfo_EpochPerDACSection_get, _axon.ABF_FileInfo_EpochPerDACSection_set)
    __swig_setmethods__["UserListSection"] = _axon.ABF_FileInfo_UserListSection_set
    __swig_getmethods__["UserListSection"] = _axon.ABF_FileInfo_UserListSection_get
    if _newclass:UserListSection = _swig_property(_axon.ABF_FileInfo_UserListSection_get, _axon.ABF_FileInfo_UserListSection_set)
    __swig_setmethods__["StatsRegionSection"] = _axon.ABF_FileInfo_StatsRegionSection_set
    __swig_getmethods__["StatsRegionSection"] = _axon.ABF_FileInfo_StatsRegionSection_get
    if _newclass:StatsRegionSection = _swig_property(_axon.ABF_FileInfo_StatsRegionSection_get, _axon.ABF_FileInfo_StatsRegionSection_set)
    __swig_setmethods__["MathSection"] = _axon.ABF_FileInfo_MathSection_set
    __swig_getmethods__["MathSection"] = _axon.ABF_FileInfo_MathSection_get
    if _newclass:MathSection = _swig_property(_axon.ABF_FileInfo_MathSection_get, _axon.ABF_FileInfo_MathSection_set)
    __swig_setmethods__["StringsSection"] = _axon.ABF_FileInfo_StringsSection_set
    __swig_getmethods__["StringsSection"] = _axon.ABF_FileInfo_StringsSection_get
    if _newclass:StringsSection = _swig_property(_axon.ABF_FileInfo_StringsSection_get, _axon.ABF_FileInfo_StringsSection_set)
    __swig_setmethods__["DataSection"] = _axon.ABF_FileInfo_DataSection_set
    __swig_getmethods__["DataSection"] = _axon.ABF_FileInfo_DataSection_get
    if _newclass:DataSection = _swig_property(_axon.ABF_FileInfo_DataSection_get, _axon.ABF_FileInfo_DataSection_set)
    __swig_setmethods__["TagSection"] = _axon.ABF_FileInfo_TagSection_set
    __swig_getmethods__["TagSection"] = _axon.ABF_FileInfo_TagSection_get
    if _newclass:TagSection = _swig_property(_axon.ABF_FileInfo_TagSection_get, _axon.ABF_FileInfo_TagSection_set)
    __swig_setmethods__["ScopeSection"] = _axon.ABF_FileInfo_ScopeSection_set
    __swig_getmethods__["ScopeSection"] = _axon.ABF_FileInfo_ScopeSection_get
    if _newclass:ScopeSection = _swig_property(_axon.ABF_FileInfo_ScopeSection_get, _axon.ABF_FileInfo_ScopeSection_set)
    __swig_setmethods__["DeltaSection"] = _axon.ABF_FileInfo_DeltaSection_set
    __swig_getmethods__["DeltaSection"] = _axon.ABF_FileInfo_DeltaSection_get
    if _newclass:DeltaSection = _swig_property(_axon.ABF_FileInfo_DeltaSection_get, _axon.ABF_FileInfo_DeltaSection_set)
    __swig_setmethods__["VoiceTagSection"] = _axon.ABF_FileInfo_VoiceTagSection_set
    __swig_getmethods__["VoiceTagSection"] = _axon.ABF_FileInfo_VoiceTagSection_get
    if _newclass:VoiceTagSection = _swig_property(_axon.ABF_FileInfo_VoiceTagSection_get, _axon.ABF_FileInfo_VoiceTagSection_set)
    __swig_setmethods__["SynchArraySection"] = _axon.ABF_FileInfo_SynchArraySection_set
    __swig_getmethods__["SynchArraySection"] = _axon.ABF_FileInfo_SynchArraySection_get
    if _newclass:SynchArraySection = _swig_property(_axon.ABF_FileInfo_SynchArraySection_get, _axon.ABF_FileInfo_SynchArraySection_set)
    __swig_setmethods__["AnnotationSection"] = _axon.ABF_FileInfo_AnnotationSection_set
    __swig_getmethods__["AnnotationSection"] = _axon.ABF_FileInfo_AnnotationSection_get
    if _newclass:AnnotationSection = _swig_property(_axon.ABF_FileInfo_AnnotationSection_get, _axon.ABF_FileInfo_AnnotationSection_set)
    __swig_setmethods__["StatsSection"] = _axon.ABF_FileInfo_StatsSection_set
    __swig_getmethods__["StatsSection"] = _axon.ABF_FileInfo_StatsSection_get
    if _newclass:StatsSection = _swig_property(_axon.ABF_FileInfo_StatsSection_get, _axon.ABF_FileInfo_StatsSection_set)
    __swig_setmethods__["sUnused"] = _axon.ABF_FileInfo_sUnused_set
    __swig_getmethods__["sUnused"] = _axon.ABF_FileInfo_sUnused_get
    if _newclass:sUnused = _swig_property(_axon.ABF_FileInfo_sUnused_get, _axon.ABF_FileInfo_sUnused_set)
    def __init__(self): 
        this = _axon.new_ABF_FileInfo()
        try: self.this.append(this)
        except: self.this = this
    __swig_destroy__ = _axon.delete_ABF_FileInfo
    __del__ = lambda self : None;
ABF_FileInfo_swigregister = _axon.ABF_FileInfo_swigregister
ABF_FileInfo_swigregister(ABF_FileInfo)

class ABF_ProtocolInfo(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, ABF_ProtocolInfo, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, ABF_ProtocolInfo, name)
    __repr__ = _swig_repr
    __swig_setmethods__["nOperationMode"] = _axon.ABF_ProtocolInfo_nOperationMode_set
    __swig_getmethods__["nOperationMode"] = _axon.ABF_ProtocolInfo_nOperationMode_get
    if _newclass:nOperationMode = _swig_property(_axon.ABF_ProtocolInfo_nOperationMode_get, _axon.ABF_ProtocolInfo_nOperationMode_set)
    __swig_setmethods__["fADCSequenceInterval"] = _axon.ABF_ProtocolInfo_fADCSequenceInterval_set
    __swig_getmethods__["fADCSequenceInterval"] = _axon.ABF_ProtocolInfo_fADCSequenceInterval_get
    if _newclass:fADCSequenceInterval = _swig_property(_axon.ABF_ProtocolInfo_fADCSequenceInterval_get, _axon.ABF_ProtocolInfo_fADCSequenceInterval_set)
    __swig_setmethods__["bEnableFileCompression"] = _axon.ABF_ProtocolInfo_bEnableFileCompression_set
    __swig_getmethods__["bEnableFileCompression"] = _axon.ABF_ProtocolInfo_bEnableFileCompression_get
    if _newclass:bEnableFileCompression = _swig_property(_axon.ABF_ProtocolInfo_bEnableFileCompression_get, _axon.ABF_ProtocolInfo_bEnableFileCompression_set)
    __swig_setmethods__["sUnused1"] = _axon.ABF_ProtocolInfo_sUnused1_set
    __swig_getmethods__["sUnused1"] = _axon.ABF_ProtocolInfo_sUnused1_get
    if _newclass:sUnused1 = _swig_property(_axon.ABF_ProtocolInfo_sUnused1_get, _axon.ABF_ProtocolInfo_sUnused1_set)
    __swig_setmethods__["uFileCompressionRatio"] = _axon.ABF_ProtocolInfo_uFileCompressionRatio_set
    __swig_getmethods__["uFileCompressionRatio"] = _axon.ABF_ProtocolInfo_uFileCompressionRatio_get
    if _newclass:uFileCompressionRatio = _swig_property(_axon.ABF_ProtocolInfo_uFileCompressionRatio_get, _axon.ABF_ProtocolInfo_uFileCompressionRatio_set)
    __swig_setmethods__["fSynchTimeUnit"] = _axon.ABF_ProtocolInfo_fSynchTimeUnit_set
    __swig_getmethods__["fSynchTimeUnit"] = _axon.ABF_ProtocolInfo_fSynchTimeUnit_get
    if _newclass:fSynchTimeUnit = _swig_property(_axon.ABF_ProtocolInfo_fSynchTimeUnit_get, _axon.ABF_ProtocolInfo_fSynchTimeUnit_set)
    __swig_setmethods__["fSecondsPerRun"] = _axon.ABF_ProtocolInfo_fSecondsPerRun_set
    __swig_getmethods__["fSecondsPerRun"] = _axon.ABF_ProtocolInfo_fSecondsPerRun_get
    if _newclass:fSecondsPerRun = _swig_property(_axon.ABF_ProtocolInfo_fSecondsPerRun_get, _axon.ABF_ProtocolInfo_fSecondsPerRun_set)
    __swig_setmethods__["lNumSamplesPerEpisode"] = _axon.ABF_ProtocolInfo_lNumSamplesPerEpisode_set
    __swig_getmethods__["lNumSamplesPerEpisode"] = _axon.ABF_ProtocolInfo_lNumSamplesPerEpisode_get
    if _newclass:lNumSamplesPerEpisode = _swig_property(_axon.ABF_ProtocolInfo_lNumSamplesPerEpisode_get, _axon.ABF_ProtocolInfo_lNumSamplesPerEpisode_set)
    __swig_setmethods__["lPreTriggerSamples"] = _axon.ABF_ProtocolInfo_lPreTriggerSamples_set
    __swig_getmethods__["lPreTriggerSamples"] = _axon.ABF_ProtocolInfo_lPreTriggerSamples_get
    if _newclass:lPreTriggerSamples = _swig_property(_axon.ABF_ProtocolInfo_lPreTriggerSamples_get, _axon.ABF_ProtocolInfo_lPreTriggerSamples_set)
    __swig_setmethods__["lEpisodesPerRun"] = _axon.ABF_ProtocolInfo_lEpisodesPerRun_set
    __swig_getmethods__["lEpisodesPerRun"] = _axon.ABF_ProtocolInfo_lEpisodesPerRun_get
    if _newclass:lEpisodesPerRun = _swig_property(_axon.ABF_ProtocolInfo_lEpisodesPerRun_get, _axon.ABF_ProtocolInfo_lEpisodesPerRun_set)
    __swig_setmethods__["lRunsPerTrial"] = _axon.ABF_ProtocolInfo_lRunsPerTrial_set
    __swig_getmethods__["lRunsPerTrial"] = _axon.ABF_ProtocolInfo_lRunsPerTrial_get
    if _newclass:lRunsPerTrial = _swig_property(_axon.ABF_ProtocolInfo_lRunsPerTrial_get, _axon.ABF_ProtocolInfo_lRunsPerTrial_set)
    __swig_setmethods__["lNumberOfTrials"] = _axon.ABF_ProtocolInfo_lNumberOfTrials_set
    __swig_getmethods__["lNumberOfTrials"] = _axon.ABF_ProtocolInfo_lNumberOfTrials_get
    if _newclass:lNumberOfTrials = _swig_property(_axon.ABF_ProtocolInfo_lNumberOfTrials_get, _axon.ABF_ProtocolInfo_lNumberOfTrials_set)
    __swig_setmethods__["nAveragingMode"] = _axon.ABF_ProtocolInfo_nAveragingMode_set
    __swig_getmethods__["nAveragingMode"] = _axon.ABF_ProtocolInfo_nAveragingMode_get
    if _newclass:nAveragingMode = _swig_property(_axon.ABF_ProtocolInfo_nAveragingMode_get, _axon.ABF_ProtocolInfo_nAveragingMode_set)
    __swig_setmethods__["nUndoRunCount"] = _axon.ABF_ProtocolInfo_nUndoRunCount_set
    __swig_getmethods__["nUndoRunCount"] = _axon.ABF_ProtocolInfo_nUndoRunCount_get
    if _newclass:nUndoRunCount = _swig_property(_axon.ABF_ProtocolInfo_nUndoRunCount_get, _axon.ABF_ProtocolInfo_nUndoRunCount_set)
    __swig_setmethods__["nFirstEpisodeInRun"] = _axon.ABF_ProtocolInfo_nFirstEpisodeInRun_set
    __swig_getmethods__["nFirstEpisodeInRun"] = _axon.ABF_ProtocolInfo_nFirstEpisodeInRun_get
    if _newclass:nFirstEpisodeInRun = _swig_property(_axon.ABF_ProtocolInfo_nFirstEpisodeInRun_get, _axon.ABF_ProtocolInfo_nFirstEpisodeInRun_set)
    __swig_setmethods__["fTriggerThreshold"] = _axon.ABF_ProtocolInfo_fTriggerThreshold_set
    __swig_getmethods__["fTriggerThreshold"] = _axon.ABF_ProtocolInfo_fTriggerThreshold_get
    if _newclass:fTriggerThreshold = _swig_property(_axon.ABF_ProtocolInfo_fTriggerThreshold_get, _axon.ABF_ProtocolInfo_fTriggerThreshold_set)
    __swig_setmethods__["nTriggerSource"] = _axon.ABF_ProtocolInfo_nTriggerSource_set
    __swig_getmethods__["nTriggerSource"] = _axon.ABF_ProtocolInfo_nTriggerSource_get
    if _newclass:nTriggerSource = _swig_property(_axon.ABF_ProtocolInfo_nTriggerSource_get, _axon.ABF_ProtocolInfo_nTriggerSource_set)
    __swig_setmethods__["nTriggerAction"] = _axon.ABF_ProtocolInfo_nTriggerAction_set
    __swig_getmethods__["nTriggerAction"] = _axon.ABF_ProtocolInfo_nTriggerAction_get
    if _newclass:nTriggerAction = _swig_property(_axon.ABF_ProtocolInfo_nTriggerAction_get, _axon.ABF_ProtocolInfo_nTriggerAction_set)
    __swig_setmethods__["nTriggerPolarity"] = _axon.ABF_ProtocolInfo_nTriggerPolarity_set
    __swig_getmethods__["nTriggerPolarity"] = _axon.ABF_ProtocolInfo_nTriggerPolarity_get
    if _newclass:nTriggerPolarity = _swig_property(_axon.ABF_ProtocolInfo_nTriggerPolarity_get, _axon.ABF_ProtocolInfo_nTriggerPolarity_set)
    __swig_setmethods__["fScopeOutputInterval"] = _axon.ABF_ProtocolInfo_fScopeOutputInterval_set
    __swig_getmethods__["fScopeOutputInterval"] = _axon.ABF_ProtocolInfo_fScopeOutputInterval_get
    if _newclass:fScopeOutputInterval = _swig_property(_axon.ABF_ProtocolInfo_fScopeOutputInterval_get, _axon.ABF_ProtocolInfo_fScopeOutputInterval_set)
    __swig_setmethods__["fEpisodeStartToStart"] = _axon.ABF_ProtocolInfo_fEpisodeStartToStart_set
    __swig_getmethods__["fEpisodeStartToStart"] = _axon.ABF_ProtocolInfo_fEpisodeStartToStart_get
    if _newclass:fEpisodeStartToStart = _swig_property(_axon.ABF_ProtocolInfo_fEpisodeStartToStart_get, _axon.ABF_ProtocolInfo_fEpisodeStartToStart_set)
    __swig_setmethods__["fRunStartToStart"] = _axon.ABF_ProtocolInfo_fRunStartToStart_set
    __swig_getmethods__["fRunStartToStart"] = _axon.ABF_ProtocolInfo_fRunStartToStart_get
    if _newclass:fRunStartToStart = _swig_property(_axon.ABF_ProtocolInfo_fRunStartToStart_get, _axon.ABF_ProtocolInfo_fRunStartToStart_set)
    __swig_setmethods__["lAverageCount"] = _axon.ABF_ProtocolInfo_lAverageCount_set
    __swig_getmethods__["lAverageCount"] = _axon.ABF_ProtocolInfo_lAverageCount_get
    if _newclass:lAverageCount = _swig_property(_axon.ABF_ProtocolInfo_lAverageCount_get, _axon.ABF_ProtocolInfo_lAverageCount_set)
    __swig_setmethods__["fTrialStartToStart"] = _axon.ABF_ProtocolInfo_fTrialStartToStart_set
    __swig_getmethods__["fTrialStartToStart"] = _axon.ABF_ProtocolInfo_fTrialStartToStart_get
    if _newclass:fTrialStartToStart = _swig_property(_axon.ABF_ProtocolInfo_fTrialStartToStart_get, _axon.ABF_ProtocolInfo_fTrialStartToStart_set)
    __swig_setmethods__["nAutoTriggerStrategy"] = _axon.ABF_ProtocolInfo_nAutoTriggerStrategy_set
    __swig_getmethods__["nAutoTriggerStrategy"] = _axon.ABF_ProtocolInfo_nAutoTriggerStrategy_get
    if _newclass:nAutoTriggerStrategy = _swig_property(_axon.ABF_ProtocolInfo_nAutoTriggerStrategy_get, _axon.ABF_ProtocolInfo_nAutoTriggerStrategy_set)
    __swig_setmethods__["fFirstRunDelayS"] = _axon.ABF_ProtocolInfo_fFirstRunDelayS_set
    __swig_getmethods__["fFirstRunDelayS"] = _axon.ABF_ProtocolInfo_fFirstRunDelayS_get
    if _newclass:fFirstRunDelayS = _swig_property(_axon.ABF_ProtocolInfo_fFirstRunDelayS_get, _axon.ABF_ProtocolInfo_fFirstRunDelayS_set)
    __swig_setmethods__["nChannelStatsStrategy"] = _axon.ABF_ProtocolInfo_nChannelStatsStrategy_set
    __swig_getmethods__["nChannelStatsStrategy"] = _axon.ABF_ProtocolInfo_nChannelStatsStrategy_get
    if _newclass:nChannelStatsStrategy = _swig_property(_axon.ABF_ProtocolInfo_nChannelStatsStrategy_get, _axon.ABF_ProtocolInfo_nChannelStatsStrategy_set)
    __swig_setmethods__["lSamplesPerTrace"] = _axon.ABF_ProtocolInfo_lSamplesPerTrace_set
    __swig_getmethods__["lSamplesPerTrace"] = _axon.ABF_ProtocolInfo_lSamplesPerTrace_get
    if _newclass:lSamplesPerTrace = _swig_property(_axon.ABF_ProtocolInfo_lSamplesPerTrace_get, _axon.ABF_ProtocolInfo_lSamplesPerTrace_set)
    __swig_setmethods__["lStartDisplayNum"] = _axon.ABF_ProtocolInfo_lStartDisplayNum_set
    __swig_getmethods__["lStartDisplayNum"] = _axon.ABF_ProtocolInfo_lStartDisplayNum_get
    if _newclass:lStartDisplayNum = _swig_property(_axon.ABF_ProtocolInfo_lStartDisplayNum_get, _axon.ABF_ProtocolInfo_lStartDisplayNum_set)
    __swig_setmethods__["lFinishDisplayNum"] = _axon.ABF_ProtocolInfo_lFinishDisplayNum_set
    __swig_getmethods__["lFinishDisplayNum"] = _axon.ABF_ProtocolInfo_lFinishDisplayNum_get
    if _newclass:lFinishDisplayNum = _swig_property(_axon.ABF_ProtocolInfo_lFinishDisplayNum_get, _axon.ABF_ProtocolInfo_lFinishDisplayNum_set)
    __swig_setmethods__["nShowPNRawData"] = _axon.ABF_ProtocolInfo_nShowPNRawData_set
    __swig_getmethods__["nShowPNRawData"] = _axon.ABF_ProtocolInfo_nShowPNRawData_get
    if _newclass:nShowPNRawData = _swig_property(_axon.ABF_ProtocolInfo_nShowPNRawData_get, _axon.ABF_ProtocolInfo_nShowPNRawData_set)
    __swig_setmethods__["fStatisticsPeriod"] = _axon.ABF_ProtocolInfo_fStatisticsPeriod_set
    __swig_getmethods__["fStatisticsPeriod"] = _axon.ABF_ProtocolInfo_fStatisticsPeriod_get
    if _newclass:fStatisticsPeriod = _swig_property(_axon.ABF_ProtocolInfo_fStatisticsPeriod_get, _axon.ABF_ProtocolInfo_fStatisticsPeriod_set)
    __swig_setmethods__["lStatisticsMeasurements"] = _axon.ABF_ProtocolInfo_lStatisticsMeasurements_set
    __swig_getmethods__["lStatisticsMeasurements"] = _axon.ABF_ProtocolInfo_lStatisticsMeasurements_get
    if _newclass:lStatisticsMeasurements = _swig_property(_axon.ABF_ProtocolInfo_lStatisticsMeasurements_get, _axon.ABF_ProtocolInfo_lStatisticsMeasurements_set)
    __swig_setmethods__["nStatisticsSaveStrategy"] = _axon.ABF_ProtocolInfo_nStatisticsSaveStrategy_set
    __swig_getmethods__["nStatisticsSaveStrategy"] = _axon.ABF_ProtocolInfo_nStatisticsSaveStrategy_get
    if _newclass:nStatisticsSaveStrategy = _swig_property(_axon.ABF_ProtocolInfo_nStatisticsSaveStrategy_get, _axon.ABF_ProtocolInfo_nStatisticsSaveStrategy_set)
    __swig_setmethods__["fADCRange"] = _axon.ABF_ProtocolInfo_fADCRange_set
    __swig_getmethods__["fADCRange"] = _axon.ABF_ProtocolInfo_fADCRange_get
    if _newclass:fADCRange = _swig_property(_axon.ABF_ProtocolInfo_fADCRange_get, _axon.ABF_ProtocolInfo_fADCRange_set)
    __swig_setmethods__["fDACRange"] = _axon.ABF_ProtocolInfo_fDACRange_set
    __swig_getmethods__["fDACRange"] = _axon.ABF_ProtocolInfo_fDACRange_get
    if _newclass:fDACRange = _swig_property(_axon.ABF_ProtocolInfo_fDACRange_get, _axon.ABF_ProtocolInfo_fDACRange_set)
    __swig_setmethods__["lADCResolution"] = _axon.ABF_ProtocolInfo_lADCResolution_set
    __swig_getmethods__["lADCResolution"] = _axon.ABF_ProtocolInfo_lADCResolution_get
    if _newclass:lADCResolution = _swig_property(_axon.ABF_ProtocolInfo_lADCResolution_get, _axon.ABF_ProtocolInfo_lADCResolution_set)
    __swig_setmethods__["lDACResolution"] = _axon.ABF_ProtocolInfo_lDACResolution_set
    __swig_getmethods__["lDACResolution"] = _axon.ABF_ProtocolInfo_lDACResolution_get
    if _newclass:lDACResolution = _swig_property(_axon.ABF_ProtocolInfo_lDACResolution_get, _axon.ABF_ProtocolInfo_lDACResolution_set)
    __swig_setmethods__["nExperimentType"] = _axon.ABF_ProtocolInfo_nExperimentType_set
    __swig_getmethods__["nExperimentType"] = _axon.ABF_ProtocolInfo_nExperimentType_get
    if _newclass:nExperimentType = _swig_property(_axon.ABF_ProtocolInfo_nExperimentType_get, _axon.ABF_ProtocolInfo_nExperimentType_set)
    __swig_setmethods__["nManualInfoStrategy"] = _axon.ABF_ProtocolInfo_nManualInfoStrategy_set
    __swig_getmethods__["nManualInfoStrategy"] = _axon.ABF_ProtocolInfo_nManualInfoStrategy_get
    if _newclass:nManualInfoStrategy = _swig_property(_axon.ABF_ProtocolInfo_nManualInfoStrategy_get, _axon.ABF_ProtocolInfo_nManualInfoStrategy_set)
    __swig_setmethods__["nCommentsEnable"] = _axon.ABF_ProtocolInfo_nCommentsEnable_set
    __swig_getmethods__["nCommentsEnable"] = _axon.ABF_ProtocolInfo_nCommentsEnable_get
    if _newclass:nCommentsEnable = _swig_property(_axon.ABF_ProtocolInfo_nCommentsEnable_get, _axon.ABF_ProtocolInfo_nCommentsEnable_set)
    __swig_setmethods__["lFileCommentIndex"] = _axon.ABF_ProtocolInfo_lFileCommentIndex_set
    __swig_getmethods__["lFileCommentIndex"] = _axon.ABF_ProtocolInfo_lFileCommentIndex_get
    if _newclass:lFileCommentIndex = _swig_property(_axon.ABF_ProtocolInfo_lFileCommentIndex_get, _axon.ABF_ProtocolInfo_lFileCommentIndex_set)
    __swig_setmethods__["nAutoAnalyseEnable"] = _axon.ABF_ProtocolInfo_nAutoAnalyseEnable_set
    __swig_getmethods__["nAutoAnalyseEnable"] = _axon.ABF_ProtocolInfo_nAutoAnalyseEnable_get
    if _newclass:nAutoAnalyseEnable = _swig_property(_axon.ABF_ProtocolInfo_nAutoAnalyseEnable_get, _axon.ABF_ProtocolInfo_nAutoAnalyseEnable_set)
    __swig_setmethods__["nSignalType"] = _axon.ABF_ProtocolInfo_nSignalType_set
    __swig_getmethods__["nSignalType"] = _axon.ABF_ProtocolInfo_nSignalType_get
    if _newclass:nSignalType = _swig_property(_axon.ABF_ProtocolInfo_nSignalType_get, _axon.ABF_ProtocolInfo_nSignalType_set)
    __swig_setmethods__["nDigitalEnable"] = _axon.ABF_ProtocolInfo_nDigitalEnable_set
    __swig_getmethods__["nDigitalEnable"] = _axon.ABF_ProtocolInfo_nDigitalEnable_get
    if _newclass:nDigitalEnable = _swig_property(_axon.ABF_ProtocolInfo_nDigitalEnable_get, _axon.ABF_ProtocolInfo_nDigitalEnable_set)
    __swig_setmethods__["nActiveDACChannel"] = _axon.ABF_ProtocolInfo_nActiveDACChannel_set
    __swig_getmethods__["nActiveDACChannel"] = _axon.ABF_ProtocolInfo_nActiveDACChannel_get
    if _newclass:nActiveDACChannel = _swig_property(_axon.ABF_ProtocolInfo_nActiveDACChannel_get, _axon.ABF_ProtocolInfo_nActiveDACChannel_set)
    __swig_setmethods__["nDigitalHolding"] = _axon.ABF_ProtocolInfo_nDigitalHolding_set
    __swig_getmethods__["nDigitalHolding"] = _axon.ABF_ProtocolInfo_nDigitalHolding_get
    if _newclass:nDigitalHolding = _swig_property(_axon.ABF_ProtocolInfo_nDigitalHolding_get, _axon.ABF_ProtocolInfo_nDigitalHolding_set)
    __swig_setmethods__["nDigitalInterEpisode"] = _axon.ABF_ProtocolInfo_nDigitalInterEpisode_set
    __swig_getmethods__["nDigitalInterEpisode"] = _axon.ABF_ProtocolInfo_nDigitalInterEpisode_get
    if _newclass:nDigitalInterEpisode = _swig_property(_axon.ABF_ProtocolInfo_nDigitalInterEpisode_get, _axon.ABF_ProtocolInfo_nDigitalInterEpisode_set)
    __swig_setmethods__["nDigitalDACChannel"] = _axon.ABF_ProtocolInfo_nDigitalDACChannel_set
    __swig_getmethods__["nDigitalDACChannel"] = _axon.ABF_ProtocolInfo_nDigitalDACChannel_get
    if _newclass:nDigitalDACChannel = _swig_property(_axon.ABF_ProtocolInfo_nDigitalDACChannel_get, _axon.ABF_ProtocolInfo_nDigitalDACChannel_set)
    __swig_setmethods__["nDigitalTrainActiveLogic"] = _axon.ABF_ProtocolInfo_nDigitalTrainActiveLogic_set
    __swig_getmethods__["nDigitalTrainActiveLogic"] = _axon.ABF_ProtocolInfo_nDigitalTrainActiveLogic_get
    if _newclass:nDigitalTrainActiveLogic = _swig_property(_axon.ABF_ProtocolInfo_nDigitalTrainActiveLogic_get, _axon.ABF_ProtocolInfo_nDigitalTrainActiveLogic_set)
    __swig_setmethods__["nStatsEnable"] = _axon.ABF_ProtocolInfo_nStatsEnable_set
    __swig_getmethods__["nStatsEnable"] = _axon.ABF_ProtocolInfo_nStatsEnable_get
    if _newclass:nStatsEnable = _swig_property(_axon.ABF_ProtocolInfo_nStatsEnable_get, _axon.ABF_ProtocolInfo_nStatsEnable_set)
    __swig_setmethods__["nStatisticsClearStrategy"] = _axon.ABF_ProtocolInfo_nStatisticsClearStrategy_set
    __swig_getmethods__["nStatisticsClearStrategy"] = _axon.ABF_ProtocolInfo_nStatisticsClearStrategy_get
    if _newclass:nStatisticsClearStrategy = _swig_property(_axon.ABF_ProtocolInfo_nStatisticsClearStrategy_get, _axon.ABF_ProtocolInfo_nStatisticsClearStrategy_set)
    __swig_setmethods__["nLevelHysteresis"] = _axon.ABF_ProtocolInfo_nLevelHysteresis_set
    __swig_getmethods__["nLevelHysteresis"] = _axon.ABF_ProtocolInfo_nLevelHysteresis_get
    if _newclass:nLevelHysteresis = _swig_property(_axon.ABF_ProtocolInfo_nLevelHysteresis_get, _axon.ABF_ProtocolInfo_nLevelHysteresis_set)
    __swig_setmethods__["lTimeHysteresis"] = _axon.ABF_ProtocolInfo_lTimeHysteresis_set
    __swig_getmethods__["lTimeHysteresis"] = _axon.ABF_ProtocolInfo_lTimeHysteresis_get
    if _newclass:lTimeHysteresis = _swig_property(_axon.ABF_ProtocolInfo_lTimeHysteresis_get, _axon.ABF_ProtocolInfo_lTimeHysteresis_set)
    __swig_setmethods__["nAllowExternalTags"] = _axon.ABF_ProtocolInfo_nAllowExternalTags_set
    __swig_getmethods__["nAllowExternalTags"] = _axon.ABF_ProtocolInfo_nAllowExternalTags_get
    if _newclass:nAllowExternalTags = _swig_property(_axon.ABF_ProtocolInfo_nAllowExternalTags_get, _axon.ABF_ProtocolInfo_nAllowExternalTags_set)
    __swig_setmethods__["nAverageAlgorithm"] = _axon.ABF_ProtocolInfo_nAverageAlgorithm_set
    __swig_getmethods__["nAverageAlgorithm"] = _axon.ABF_ProtocolInfo_nAverageAlgorithm_get
    if _newclass:nAverageAlgorithm = _swig_property(_axon.ABF_ProtocolInfo_nAverageAlgorithm_get, _axon.ABF_ProtocolInfo_nAverageAlgorithm_set)
    __swig_setmethods__["fAverageWeighting"] = _axon.ABF_ProtocolInfo_fAverageWeighting_set
    __swig_getmethods__["fAverageWeighting"] = _axon.ABF_ProtocolInfo_fAverageWeighting_get
    if _newclass:fAverageWeighting = _swig_property(_axon.ABF_ProtocolInfo_fAverageWeighting_get, _axon.ABF_ProtocolInfo_fAverageWeighting_set)
    __swig_setmethods__["nUndoPromptStrategy"] = _axon.ABF_ProtocolInfo_nUndoPromptStrategy_set
    __swig_getmethods__["nUndoPromptStrategy"] = _axon.ABF_ProtocolInfo_nUndoPromptStrategy_get
    if _newclass:nUndoPromptStrategy = _swig_property(_axon.ABF_ProtocolInfo_nUndoPromptStrategy_get, _axon.ABF_ProtocolInfo_nUndoPromptStrategy_set)
    __swig_setmethods__["nTrialTriggerSource"] = _axon.ABF_ProtocolInfo_nTrialTriggerSource_set
    __swig_getmethods__["nTrialTriggerSource"] = _axon.ABF_ProtocolInfo_nTrialTriggerSource_get
    if _newclass:nTrialTriggerSource = _swig_property(_axon.ABF_ProtocolInfo_nTrialTriggerSource_get, _axon.ABF_ProtocolInfo_nTrialTriggerSource_set)
    __swig_setmethods__["nStatisticsDisplayStrategy"] = _axon.ABF_ProtocolInfo_nStatisticsDisplayStrategy_set
    __swig_getmethods__["nStatisticsDisplayStrategy"] = _axon.ABF_ProtocolInfo_nStatisticsDisplayStrategy_get
    if _newclass:nStatisticsDisplayStrategy = _swig_property(_axon.ABF_ProtocolInfo_nStatisticsDisplayStrategy_get, _axon.ABF_ProtocolInfo_nStatisticsDisplayStrategy_set)
    __swig_setmethods__["nExternalTagType"] = _axon.ABF_ProtocolInfo_nExternalTagType_set
    __swig_getmethods__["nExternalTagType"] = _axon.ABF_ProtocolInfo_nExternalTagType_get
    if _newclass:nExternalTagType = _swig_property(_axon.ABF_ProtocolInfo_nExternalTagType_get, _axon.ABF_ProtocolInfo_nExternalTagType_set)
    __swig_setmethods__["nScopeTriggerOut"] = _axon.ABF_ProtocolInfo_nScopeTriggerOut_set
    __swig_getmethods__["nScopeTriggerOut"] = _axon.ABF_ProtocolInfo_nScopeTriggerOut_get
    if _newclass:nScopeTriggerOut = _swig_property(_axon.ABF_ProtocolInfo_nScopeTriggerOut_get, _axon.ABF_ProtocolInfo_nScopeTriggerOut_set)
    __swig_setmethods__["nLTPType"] = _axon.ABF_ProtocolInfo_nLTPType_set
    __swig_getmethods__["nLTPType"] = _axon.ABF_ProtocolInfo_nLTPType_get
    if _newclass:nLTPType = _swig_property(_axon.ABF_ProtocolInfo_nLTPType_get, _axon.ABF_ProtocolInfo_nLTPType_set)
    __swig_setmethods__["nAlternateDACOutputState"] = _axon.ABF_ProtocolInfo_nAlternateDACOutputState_set
    __swig_getmethods__["nAlternateDACOutputState"] = _axon.ABF_ProtocolInfo_nAlternateDACOutputState_get
    if _newclass:nAlternateDACOutputState = _swig_property(_axon.ABF_ProtocolInfo_nAlternateDACOutputState_get, _axon.ABF_ProtocolInfo_nAlternateDACOutputState_set)
    __swig_setmethods__["nAlternateDigitalOutputState"] = _axon.ABF_ProtocolInfo_nAlternateDigitalOutputState_set
    __swig_getmethods__["nAlternateDigitalOutputState"] = _axon.ABF_ProtocolInfo_nAlternateDigitalOutputState_get
    if _newclass:nAlternateDigitalOutputState = _swig_property(_axon.ABF_ProtocolInfo_nAlternateDigitalOutputState_get, _axon.ABF_ProtocolInfo_nAlternateDigitalOutputState_set)
    __swig_setmethods__["fCellID"] = _axon.ABF_ProtocolInfo_fCellID_set
    __swig_getmethods__["fCellID"] = _axon.ABF_ProtocolInfo_fCellID_get
    if _newclass:fCellID = _swig_property(_axon.ABF_ProtocolInfo_fCellID_get, _axon.ABF_ProtocolInfo_fCellID_set)
    __swig_setmethods__["nDigitizerADCs"] = _axon.ABF_ProtocolInfo_nDigitizerADCs_set
    __swig_getmethods__["nDigitizerADCs"] = _axon.ABF_ProtocolInfo_nDigitizerADCs_get
    if _newclass:nDigitizerADCs = _swig_property(_axon.ABF_ProtocolInfo_nDigitizerADCs_get, _axon.ABF_ProtocolInfo_nDigitizerADCs_set)
    __swig_setmethods__["nDigitizerDACs"] = _axon.ABF_ProtocolInfo_nDigitizerDACs_set
    __swig_getmethods__["nDigitizerDACs"] = _axon.ABF_ProtocolInfo_nDigitizerDACs_get
    if _newclass:nDigitizerDACs = _swig_property(_axon.ABF_ProtocolInfo_nDigitizerDACs_get, _axon.ABF_ProtocolInfo_nDigitizerDACs_set)
    __swig_setmethods__["nDigitizerTotalDigitalOuts"] = _axon.ABF_ProtocolInfo_nDigitizerTotalDigitalOuts_set
    __swig_getmethods__["nDigitizerTotalDigitalOuts"] = _axon.ABF_ProtocolInfo_nDigitizerTotalDigitalOuts_get
    if _newclass:nDigitizerTotalDigitalOuts = _swig_property(_axon.ABF_ProtocolInfo_nDigitizerTotalDigitalOuts_get, _axon.ABF_ProtocolInfo_nDigitizerTotalDigitalOuts_set)
    __swig_setmethods__["nDigitizerSynchDigitalOuts"] = _axon.ABF_ProtocolInfo_nDigitizerSynchDigitalOuts_set
    __swig_getmethods__["nDigitizerSynchDigitalOuts"] = _axon.ABF_ProtocolInfo_nDigitizerSynchDigitalOuts_get
    if _newclass:nDigitizerSynchDigitalOuts = _swig_property(_axon.ABF_ProtocolInfo_nDigitizerSynchDigitalOuts_get, _axon.ABF_ProtocolInfo_nDigitizerSynchDigitalOuts_set)
    __swig_setmethods__["nDigitizerType"] = _axon.ABF_ProtocolInfo_nDigitizerType_set
    __swig_getmethods__["nDigitizerType"] = _axon.ABF_ProtocolInfo_nDigitizerType_get
    if _newclass:nDigitizerType = _swig_property(_axon.ABF_ProtocolInfo_nDigitizerType_get, _axon.ABF_ProtocolInfo_nDigitizerType_set)
    __swig_setmethods__["sUnused"] = _axon.ABF_ProtocolInfo_sUnused_set
    __swig_getmethods__["sUnused"] = _axon.ABF_ProtocolInfo_sUnused_get
    if _newclass:sUnused = _swig_property(_axon.ABF_ProtocolInfo_sUnused_get, _axon.ABF_ProtocolInfo_sUnused_set)
    def __init__(self): 
        this = _axon.new_ABF_ProtocolInfo()
        try: self.this.append(this)
        except: self.this = this
    __swig_destroy__ = _axon.delete_ABF_ProtocolInfo
    __del__ = lambda self : None;
ABF_ProtocolInfo_swigregister = _axon.ABF_ProtocolInfo_swigregister
ABF_ProtocolInfo_swigregister(ABF_ProtocolInfo)

class ABF_MathInfo(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, ABF_MathInfo, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, ABF_MathInfo, name)
    __repr__ = _swig_repr
    __swig_setmethods__["nMathEnable"] = _axon.ABF_MathInfo_nMathEnable_set
    __swig_getmethods__["nMathEnable"] = _axon.ABF_MathInfo_nMathEnable_get
    if _newclass:nMathEnable = _swig_property(_axon.ABF_MathInfo_nMathEnable_get, _axon.ABF_MathInfo_nMathEnable_set)
    __swig_setmethods__["nMathExpression"] = _axon.ABF_MathInfo_nMathExpression_set
    __swig_getmethods__["nMathExpression"] = _axon.ABF_MathInfo_nMathExpression_get
    if _newclass:nMathExpression = _swig_property(_axon.ABF_MathInfo_nMathExpression_get, _axon.ABF_MathInfo_nMathExpression_set)
    __swig_setmethods__["uMathOperatorIndex"] = _axon.ABF_MathInfo_uMathOperatorIndex_set
    __swig_getmethods__["uMathOperatorIndex"] = _axon.ABF_MathInfo_uMathOperatorIndex_get
    if _newclass:uMathOperatorIndex = _swig_property(_axon.ABF_MathInfo_uMathOperatorIndex_get, _axon.ABF_MathInfo_uMathOperatorIndex_set)
    __swig_setmethods__["uMathUnitsIndex"] = _axon.ABF_MathInfo_uMathUnitsIndex_set
    __swig_getmethods__["uMathUnitsIndex"] = _axon.ABF_MathInfo_uMathUnitsIndex_get
    if _newclass:uMathUnitsIndex = _swig_property(_axon.ABF_MathInfo_uMathUnitsIndex_get, _axon.ABF_MathInfo_uMathUnitsIndex_set)
    __swig_setmethods__["fMathUpperLimit"] = _axon.ABF_MathInfo_fMathUpperLimit_set
    __swig_getmethods__["fMathUpperLimit"] = _axon.ABF_MathInfo_fMathUpperLimit_get
    if _newclass:fMathUpperLimit = _swig_property(_axon.ABF_MathInfo_fMathUpperLimit_get, _axon.ABF_MathInfo_fMathUpperLimit_set)
    __swig_setmethods__["fMathLowerLimit"] = _axon.ABF_MathInfo_fMathLowerLimit_set
    __swig_getmethods__["fMathLowerLimit"] = _axon.ABF_MathInfo_fMathLowerLimit_get
    if _newclass:fMathLowerLimit = _swig_property(_axon.ABF_MathInfo_fMathLowerLimit_get, _axon.ABF_MathInfo_fMathLowerLimit_set)
    __swig_setmethods__["nMathADCNum"] = _axon.ABF_MathInfo_nMathADCNum_set
    __swig_getmethods__["nMathADCNum"] = _axon.ABF_MathInfo_nMathADCNum_get
    if _newclass:nMathADCNum = _swig_property(_axon.ABF_MathInfo_nMathADCNum_get, _axon.ABF_MathInfo_nMathADCNum_set)
    __swig_setmethods__["sUnused"] = _axon.ABF_MathInfo_sUnused_set
    __swig_getmethods__["sUnused"] = _axon.ABF_MathInfo_sUnused_get
    if _newclass:sUnused = _swig_property(_axon.ABF_MathInfo_sUnused_get, _axon.ABF_MathInfo_sUnused_set)
    __swig_setmethods__["fMathK"] = _axon.ABF_MathInfo_fMathK_set
    __swig_getmethods__["fMathK"] = _axon.ABF_MathInfo_fMathK_get
    if _newclass:fMathK = _swig_property(_axon.ABF_MathInfo_fMathK_get, _axon.ABF_MathInfo_fMathK_set)
    __swig_setmethods__["sUnused2"] = _axon.ABF_MathInfo_sUnused2_set
    __swig_getmethods__["sUnused2"] = _axon.ABF_MathInfo_sUnused2_get
    if _newclass:sUnused2 = _swig_property(_axon.ABF_MathInfo_sUnused2_get, _axon.ABF_MathInfo_sUnused2_set)
    def __init__(self): 
        this = _axon.new_ABF_MathInfo()
        try: self.this.append(this)
        except: self.this = this
    __swig_destroy__ = _axon.delete_ABF_MathInfo
    __del__ = lambda self : None;
ABF_MathInfo_swigregister = _axon.ABF_MathInfo_swigregister
ABF_MathInfo_swigregister(ABF_MathInfo)

class ABF_ADCInfo(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, ABF_ADCInfo, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, ABF_ADCInfo, name)
    __repr__ = _swig_repr
    __swig_setmethods__["nADCNum"] = _axon.ABF_ADCInfo_nADCNum_set
    __swig_getmethods__["nADCNum"] = _axon.ABF_ADCInfo_nADCNum_get
    if _newclass:nADCNum = _swig_property(_axon.ABF_ADCInfo_nADCNum_get, _axon.ABF_ADCInfo_nADCNum_set)
    __swig_setmethods__["nTelegraphEnable"] = _axon.ABF_ADCInfo_nTelegraphEnable_set
    __swig_getmethods__["nTelegraphEnable"] = _axon.ABF_ADCInfo_nTelegraphEnable_get
    if _newclass:nTelegraphEnable = _swig_property(_axon.ABF_ADCInfo_nTelegraphEnable_get, _axon.ABF_ADCInfo_nTelegraphEnable_set)
    __swig_setmethods__["nTelegraphInstrument"] = _axon.ABF_ADCInfo_nTelegraphInstrument_set
    __swig_getmethods__["nTelegraphInstrument"] = _axon.ABF_ADCInfo_nTelegraphInstrument_get
    if _newclass:nTelegraphInstrument = _swig_property(_axon.ABF_ADCInfo_nTelegraphInstrument_get, _axon.ABF_ADCInfo_nTelegraphInstrument_set)
    __swig_setmethods__["fTelegraphAdditGain"] = _axon.ABF_ADCInfo_fTelegraphAdditGain_set
    __swig_getmethods__["fTelegraphAdditGain"] = _axon.ABF_ADCInfo_fTelegraphAdditGain_get
    if _newclass:fTelegraphAdditGain = _swig_property(_axon.ABF_ADCInfo_fTelegraphAdditGain_get, _axon.ABF_ADCInfo_fTelegraphAdditGain_set)
    __swig_setmethods__["fTelegraphFilter"] = _axon.ABF_ADCInfo_fTelegraphFilter_set
    __swig_getmethods__["fTelegraphFilter"] = _axon.ABF_ADCInfo_fTelegraphFilter_get
    if _newclass:fTelegraphFilter = _swig_property(_axon.ABF_ADCInfo_fTelegraphFilter_get, _axon.ABF_ADCInfo_fTelegraphFilter_set)
    __swig_setmethods__["fTelegraphMembraneCap"] = _axon.ABF_ADCInfo_fTelegraphMembraneCap_set
    __swig_getmethods__["fTelegraphMembraneCap"] = _axon.ABF_ADCInfo_fTelegraphMembraneCap_get
    if _newclass:fTelegraphMembraneCap = _swig_property(_axon.ABF_ADCInfo_fTelegraphMembraneCap_get, _axon.ABF_ADCInfo_fTelegraphMembraneCap_set)
    __swig_setmethods__["nTelegraphMode"] = _axon.ABF_ADCInfo_nTelegraphMode_set
    __swig_getmethods__["nTelegraphMode"] = _axon.ABF_ADCInfo_nTelegraphMode_get
    if _newclass:nTelegraphMode = _swig_property(_axon.ABF_ADCInfo_nTelegraphMode_get, _axon.ABF_ADCInfo_nTelegraphMode_set)
    __swig_setmethods__["fTelegraphAccessResistance"] = _axon.ABF_ADCInfo_fTelegraphAccessResistance_set
    __swig_getmethods__["fTelegraphAccessResistance"] = _axon.ABF_ADCInfo_fTelegraphAccessResistance_get
    if _newclass:fTelegraphAccessResistance = _swig_property(_axon.ABF_ADCInfo_fTelegraphAccessResistance_get, _axon.ABF_ADCInfo_fTelegraphAccessResistance_set)
    __swig_setmethods__["nADCPtoLChannelMap"] = _axon.ABF_ADCInfo_nADCPtoLChannelMap_set
    __swig_getmethods__["nADCPtoLChannelMap"] = _axon.ABF_ADCInfo_nADCPtoLChannelMap_get
    if _newclass:nADCPtoLChannelMap = _swig_property(_axon.ABF_ADCInfo_nADCPtoLChannelMap_get, _axon.ABF_ADCInfo_nADCPtoLChannelMap_set)
    __swig_setmethods__["nADCSamplingSeq"] = _axon.ABF_ADCInfo_nADCSamplingSeq_set
    __swig_getmethods__["nADCSamplingSeq"] = _axon.ABF_ADCInfo_nADCSamplingSeq_get
    if _newclass:nADCSamplingSeq = _swig_property(_axon.ABF_ADCInfo_nADCSamplingSeq_get, _axon.ABF_ADCInfo_nADCSamplingSeq_set)
    __swig_setmethods__["fADCProgrammableGain"] = _axon.ABF_ADCInfo_fADCProgrammableGain_set
    __swig_getmethods__["fADCProgrammableGain"] = _axon.ABF_ADCInfo_fADCProgrammableGain_get
    if _newclass:fADCProgrammableGain = _swig_property(_axon.ABF_ADCInfo_fADCProgrammableGain_get, _axon.ABF_ADCInfo_fADCProgrammableGain_set)
    __swig_setmethods__["fADCDisplayAmplification"] = _axon.ABF_ADCInfo_fADCDisplayAmplification_set
    __swig_getmethods__["fADCDisplayAmplification"] = _axon.ABF_ADCInfo_fADCDisplayAmplification_get
    if _newclass:fADCDisplayAmplification = _swig_property(_axon.ABF_ADCInfo_fADCDisplayAmplification_get, _axon.ABF_ADCInfo_fADCDisplayAmplification_set)
    __swig_setmethods__["fADCDisplayOffset"] = _axon.ABF_ADCInfo_fADCDisplayOffset_set
    __swig_getmethods__["fADCDisplayOffset"] = _axon.ABF_ADCInfo_fADCDisplayOffset_get
    if _newclass:fADCDisplayOffset = _swig_property(_axon.ABF_ADCInfo_fADCDisplayOffset_get, _axon.ABF_ADCInfo_fADCDisplayOffset_set)
    __swig_setmethods__["fInstrumentScaleFactor"] = _axon.ABF_ADCInfo_fInstrumentScaleFactor_set
    __swig_getmethods__["fInstrumentScaleFactor"] = _axon.ABF_ADCInfo_fInstrumentScaleFactor_get
    if _newclass:fInstrumentScaleFactor = _swig_property(_axon.ABF_ADCInfo_fInstrumentScaleFactor_get, _axon.ABF_ADCInfo_fInstrumentScaleFactor_set)
    __swig_setmethods__["fInstrumentOffset"] = _axon.ABF_ADCInfo_fInstrumentOffset_set
    __swig_getmethods__["fInstrumentOffset"] = _axon.ABF_ADCInfo_fInstrumentOffset_get
    if _newclass:fInstrumentOffset = _swig_property(_axon.ABF_ADCInfo_fInstrumentOffset_get, _axon.ABF_ADCInfo_fInstrumentOffset_set)
    __swig_setmethods__["fSignalGain"] = _axon.ABF_ADCInfo_fSignalGain_set
    __swig_getmethods__["fSignalGain"] = _axon.ABF_ADCInfo_fSignalGain_get
    if _newclass:fSignalGain = _swig_property(_axon.ABF_ADCInfo_fSignalGain_get, _axon.ABF_ADCInfo_fSignalGain_set)
    __swig_setmethods__["fSignalOffset"] = _axon.ABF_ADCInfo_fSignalOffset_set
    __swig_getmethods__["fSignalOffset"] = _axon.ABF_ADCInfo_fSignalOffset_get
    if _newclass:fSignalOffset = _swig_property(_axon.ABF_ADCInfo_fSignalOffset_get, _axon.ABF_ADCInfo_fSignalOffset_set)
    __swig_setmethods__["fSignalLowpassFilter"] = _axon.ABF_ADCInfo_fSignalLowpassFilter_set
    __swig_getmethods__["fSignalLowpassFilter"] = _axon.ABF_ADCInfo_fSignalLowpassFilter_get
    if _newclass:fSignalLowpassFilter = _swig_property(_axon.ABF_ADCInfo_fSignalLowpassFilter_get, _axon.ABF_ADCInfo_fSignalLowpassFilter_set)
    __swig_setmethods__["fSignalHighpassFilter"] = _axon.ABF_ADCInfo_fSignalHighpassFilter_set
    __swig_getmethods__["fSignalHighpassFilter"] = _axon.ABF_ADCInfo_fSignalHighpassFilter_get
    if _newclass:fSignalHighpassFilter = _swig_property(_axon.ABF_ADCInfo_fSignalHighpassFilter_get, _axon.ABF_ADCInfo_fSignalHighpassFilter_set)
    __swig_setmethods__["nLowpassFilterType"] = _axon.ABF_ADCInfo_nLowpassFilterType_set
    __swig_getmethods__["nLowpassFilterType"] = _axon.ABF_ADCInfo_nLowpassFilterType_get
    if _newclass:nLowpassFilterType = _swig_property(_axon.ABF_ADCInfo_nLowpassFilterType_get, _axon.ABF_ADCInfo_nLowpassFilterType_set)
    __swig_setmethods__["nHighpassFilterType"] = _axon.ABF_ADCInfo_nHighpassFilterType_set
    __swig_getmethods__["nHighpassFilterType"] = _axon.ABF_ADCInfo_nHighpassFilterType_get
    if _newclass:nHighpassFilterType = _swig_property(_axon.ABF_ADCInfo_nHighpassFilterType_get, _axon.ABF_ADCInfo_nHighpassFilterType_set)
    __swig_setmethods__["fPostProcessLowpassFilter"] = _axon.ABF_ADCInfo_fPostProcessLowpassFilter_set
    __swig_getmethods__["fPostProcessLowpassFilter"] = _axon.ABF_ADCInfo_fPostProcessLowpassFilter_get
    if _newclass:fPostProcessLowpassFilter = _swig_property(_axon.ABF_ADCInfo_fPostProcessLowpassFilter_get, _axon.ABF_ADCInfo_fPostProcessLowpassFilter_set)
    __swig_setmethods__["nPostProcessLowpassFilterType"] = _axon.ABF_ADCInfo_nPostProcessLowpassFilterType_set
    __swig_getmethods__["nPostProcessLowpassFilterType"] = _axon.ABF_ADCInfo_nPostProcessLowpassFilterType_get
    if _newclass:nPostProcessLowpassFilterType = _swig_property(_axon.ABF_ADCInfo_nPostProcessLowpassFilterType_get, _axon.ABF_ADCInfo_nPostProcessLowpassFilterType_set)
    __swig_setmethods__["bEnabledDuringPN"] = _axon.ABF_ADCInfo_bEnabledDuringPN_set
    __swig_getmethods__["bEnabledDuringPN"] = _axon.ABF_ADCInfo_bEnabledDuringPN_get
    if _newclass:bEnabledDuringPN = _swig_property(_axon.ABF_ADCInfo_bEnabledDuringPN_get, _axon.ABF_ADCInfo_bEnabledDuringPN_set)
    __swig_setmethods__["nStatsChannelPolarity"] = _axon.ABF_ADCInfo_nStatsChannelPolarity_set
    __swig_getmethods__["nStatsChannelPolarity"] = _axon.ABF_ADCInfo_nStatsChannelPolarity_get
    if _newclass:nStatsChannelPolarity = _swig_property(_axon.ABF_ADCInfo_nStatsChannelPolarity_get, _axon.ABF_ADCInfo_nStatsChannelPolarity_set)
    __swig_setmethods__["lADCChannelNameIndex"] = _axon.ABF_ADCInfo_lADCChannelNameIndex_set
    __swig_getmethods__["lADCChannelNameIndex"] = _axon.ABF_ADCInfo_lADCChannelNameIndex_get
    if _newclass:lADCChannelNameIndex = _swig_property(_axon.ABF_ADCInfo_lADCChannelNameIndex_get, _axon.ABF_ADCInfo_lADCChannelNameIndex_set)
    __swig_setmethods__["lADCUnitsIndex"] = _axon.ABF_ADCInfo_lADCUnitsIndex_set
    __swig_getmethods__["lADCUnitsIndex"] = _axon.ABF_ADCInfo_lADCUnitsIndex_get
    if _newclass:lADCUnitsIndex = _swig_property(_axon.ABF_ADCInfo_lADCUnitsIndex_get, _axon.ABF_ADCInfo_lADCUnitsIndex_set)
    __swig_setmethods__["sUnused"] = _axon.ABF_ADCInfo_sUnused_set
    __swig_getmethods__["sUnused"] = _axon.ABF_ADCInfo_sUnused_get
    if _newclass:sUnused = _swig_property(_axon.ABF_ADCInfo_sUnused_get, _axon.ABF_ADCInfo_sUnused_set)
    def __init__(self): 
        this = _axon.new_ABF_ADCInfo()
        try: self.this.append(this)
        except: self.this = this
    __swig_destroy__ = _axon.delete_ABF_ADCInfo
    __del__ = lambda self : None;
ABF_ADCInfo_swigregister = _axon.ABF_ADCInfo_swigregister
ABF_ADCInfo_swigregister(ABF_ADCInfo)

class ABF_DACInfo(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, ABF_DACInfo, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, ABF_DACInfo, name)
    __repr__ = _swig_repr
    __swig_setmethods__["nDACNum"] = _axon.ABF_DACInfo_nDACNum_set
    __swig_getmethods__["nDACNum"] = _axon.ABF_DACInfo_nDACNum_get
    if _newclass:nDACNum = _swig_property(_axon.ABF_DACInfo_nDACNum_get, _axon.ABF_DACInfo_nDACNum_set)
    __swig_setmethods__["nTelegraphDACScaleFactorEnable"] = _axon.ABF_DACInfo_nTelegraphDACScaleFactorEnable_set
    __swig_getmethods__["nTelegraphDACScaleFactorEnable"] = _axon.ABF_DACInfo_nTelegraphDACScaleFactorEnable_get
    if _newclass:nTelegraphDACScaleFactorEnable = _swig_property(_axon.ABF_DACInfo_nTelegraphDACScaleFactorEnable_get, _axon.ABF_DACInfo_nTelegraphDACScaleFactorEnable_set)
    __swig_setmethods__["fInstrumentHoldingLevel"] = _axon.ABF_DACInfo_fInstrumentHoldingLevel_set
    __swig_getmethods__["fInstrumentHoldingLevel"] = _axon.ABF_DACInfo_fInstrumentHoldingLevel_get
    if _newclass:fInstrumentHoldingLevel = _swig_property(_axon.ABF_DACInfo_fInstrumentHoldingLevel_get, _axon.ABF_DACInfo_fInstrumentHoldingLevel_set)
    __swig_setmethods__["fDACScaleFactor"] = _axon.ABF_DACInfo_fDACScaleFactor_set
    __swig_getmethods__["fDACScaleFactor"] = _axon.ABF_DACInfo_fDACScaleFactor_get
    if _newclass:fDACScaleFactor = _swig_property(_axon.ABF_DACInfo_fDACScaleFactor_get, _axon.ABF_DACInfo_fDACScaleFactor_set)
    __swig_setmethods__["fDACHoldingLevel"] = _axon.ABF_DACInfo_fDACHoldingLevel_set
    __swig_getmethods__["fDACHoldingLevel"] = _axon.ABF_DACInfo_fDACHoldingLevel_get
    if _newclass:fDACHoldingLevel = _swig_property(_axon.ABF_DACInfo_fDACHoldingLevel_get, _axon.ABF_DACInfo_fDACHoldingLevel_set)
    __swig_setmethods__["fDACCalibrationFactor"] = _axon.ABF_DACInfo_fDACCalibrationFactor_set
    __swig_getmethods__["fDACCalibrationFactor"] = _axon.ABF_DACInfo_fDACCalibrationFactor_get
    if _newclass:fDACCalibrationFactor = _swig_property(_axon.ABF_DACInfo_fDACCalibrationFactor_get, _axon.ABF_DACInfo_fDACCalibrationFactor_set)
    __swig_setmethods__["fDACCalibrationOffset"] = _axon.ABF_DACInfo_fDACCalibrationOffset_set
    __swig_getmethods__["fDACCalibrationOffset"] = _axon.ABF_DACInfo_fDACCalibrationOffset_get
    if _newclass:fDACCalibrationOffset = _swig_property(_axon.ABF_DACInfo_fDACCalibrationOffset_get, _axon.ABF_DACInfo_fDACCalibrationOffset_set)
    __swig_setmethods__["lDACChannelNameIndex"] = _axon.ABF_DACInfo_lDACChannelNameIndex_set
    __swig_getmethods__["lDACChannelNameIndex"] = _axon.ABF_DACInfo_lDACChannelNameIndex_get
    if _newclass:lDACChannelNameIndex = _swig_property(_axon.ABF_DACInfo_lDACChannelNameIndex_get, _axon.ABF_DACInfo_lDACChannelNameIndex_set)
    __swig_setmethods__["lDACChannelUnitsIndex"] = _axon.ABF_DACInfo_lDACChannelUnitsIndex_set
    __swig_getmethods__["lDACChannelUnitsIndex"] = _axon.ABF_DACInfo_lDACChannelUnitsIndex_get
    if _newclass:lDACChannelUnitsIndex = _swig_property(_axon.ABF_DACInfo_lDACChannelUnitsIndex_get, _axon.ABF_DACInfo_lDACChannelUnitsIndex_set)
    __swig_setmethods__["lDACFilePtr"] = _axon.ABF_DACInfo_lDACFilePtr_set
    __swig_getmethods__["lDACFilePtr"] = _axon.ABF_DACInfo_lDACFilePtr_get
    if _newclass:lDACFilePtr = _swig_property(_axon.ABF_DACInfo_lDACFilePtr_get, _axon.ABF_DACInfo_lDACFilePtr_set)
    __swig_setmethods__["lDACFileNumEpisodes"] = _axon.ABF_DACInfo_lDACFileNumEpisodes_set
    __swig_getmethods__["lDACFileNumEpisodes"] = _axon.ABF_DACInfo_lDACFileNumEpisodes_get
    if _newclass:lDACFileNumEpisodes = _swig_property(_axon.ABF_DACInfo_lDACFileNumEpisodes_get, _axon.ABF_DACInfo_lDACFileNumEpisodes_set)
    __swig_setmethods__["nWaveformEnable"] = _axon.ABF_DACInfo_nWaveformEnable_set
    __swig_getmethods__["nWaveformEnable"] = _axon.ABF_DACInfo_nWaveformEnable_get
    if _newclass:nWaveformEnable = _swig_property(_axon.ABF_DACInfo_nWaveformEnable_get, _axon.ABF_DACInfo_nWaveformEnable_set)
    __swig_setmethods__["nWaveformSource"] = _axon.ABF_DACInfo_nWaveformSource_set
    __swig_getmethods__["nWaveformSource"] = _axon.ABF_DACInfo_nWaveformSource_get
    if _newclass:nWaveformSource = _swig_property(_axon.ABF_DACInfo_nWaveformSource_get, _axon.ABF_DACInfo_nWaveformSource_set)
    __swig_setmethods__["nInterEpisodeLevel"] = _axon.ABF_DACInfo_nInterEpisodeLevel_set
    __swig_getmethods__["nInterEpisodeLevel"] = _axon.ABF_DACInfo_nInterEpisodeLevel_get
    if _newclass:nInterEpisodeLevel = _swig_property(_axon.ABF_DACInfo_nInterEpisodeLevel_get, _axon.ABF_DACInfo_nInterEpisodeLevel_set)
    __swig_setmethods__["fDACFileScale"] = _axon.ABF_DACInfo_fDACFileScale_set
    __swig_getmethods__["fDACFileScale"] = _axon.ABF_DACInfo_fDACFileScale_get
    if _newclass:fDACFileScale = _swig_property(_axon.ABF_DACInfo_fDACFileScale_get, _axon.ABF_DACInfo_fDACFileScale_set)
    __swig_setmethods__["fDACFileOffset"] = _axon.ABF_DACInfo_fDACFileOffset_set
    __swig_getmethods__["fDACFileOffset"] = _axon.ABF_DACInfo_fDACFileOffset_get
    if _newclass:fDACFileOffset = _swig_property(_axon.ABF_DACInfo_fDACFileOffset_get, _axon.ABF_DACInfo_fDACFileOffset_set)
    __swig_setmethods__["lDACFileEpisodeNum"] = _axon.ABF_DACInfo_lDACFileEpisodeNum_set
    __swig_getmethods__["lDACFileEpisodeNum"] = _axon.ABF_DACInfo_lDACFileEpisodeNum_get
    if _newclass:lDACFileEpisodeNum = _swig_property(_axon.ABF_DACInfo_lDACFileEpisodeNum_get, _axon.ABF_DACInfo_lDACFileEpisodeNum_set)
    __swig_setmethods__["nDACFileADCNum"] = _axon.ABF_DACInfo_nDACFileADCNum_set
    __swig_getmethods__["nDACFileADCNum"] = _axon.ABF_DACInfo_nDACFileADCNum_get
    if _newclass:nDACFileADCNum = _swig_property(_axon.ABF_DACInfo_nDACFileADCNum_get, _axon.ABF_DACInfo_nDACFileADCNum_set)
    __swig_setmethods__["nConditEnable"] = _axon.ABF_DACInfo_nConditEnable_set
    __swig_getmethods__["nConditEnable"] = _axon.ABF_DACInfo_nConditEnable_get
    if _newclass:nConditEnable = _swig_property(_axon.ABF_DACInfo_nConditEnable_get, _axon.ABF_DACInfo_nConditEnable_set)
    __swig_setmethods__["lConditNumPulses"] = _axon.ABF_DACInfo_lConditNumPulses_set
    __swig_getmethods__["lConditNumPulses"] = _axon.ABF_DACInfo_lConditNumPulses_get
    if _newclass:lConditNumPulses = _swig_property(_axon.ABF_DACInfo_lConditNumPulses_get, _axon.ABF_DACInfo_lConditNumPulses_set)
    __swig_setmethods__["fBaselineDuration"] = _axon.ABF_DACInfo_fBaselineDuration_set
    __swig_getmethods__["fBaselineDuration"] = _axon.ABF_DACInfo_fBaselineDuration_get
    if _newclass:fBaselineDuration = _swig_property(_axon.ABF_DACInfo_fBaselineDuration_get, _axon.ABF_DACInfo_fBaselineDuration_set)
    __swig_setmethods__["fBaselineLevel"] = _axon.ABF_DACInfo_fBaselineLevel_set
    __swig_getmethods__["fBaselineLevel"] = _axon.ABF_DACInfo_fBaselineLevel_get
    if _newclass:fBaselineLevel = _swig_property(_axon.ABF_DACInfo_fBaselineLevel_get, _axon.ABF_DACInfo_fBaselineLevel_set)
    __swig_setmethods__["fStepDuration"] = _axon.ABF_DACInfo_fStepDuration_set
    __swig_getmethods__["fStepDuration"] = _axon.ABF_DACInfo_fStepDuration_get
    if _newclass:fStepDuration = _swig_property(_axon.ABF_DACInfo_fStepDuration_get, _axon.ABF_DACInfo_fStepDuration_set)
    __swig_setmethods__["fStepLevel"] = _axon.ABF_DACInfo_fStepLevel_set
    __swig_getmethods__["fStepLevel"] = _axon.ABF_DACInfo_fStepLevel_get
    if _newclass:fStepLevel = _swig_property(_axon.ABF_DACInfo_fStepLevel_get, _axon.ABF_DACInfo_fStepLevel_set)
    __swig_setmethods__["fPostTrainPeriod"] = _axon.ABF_DACInfo_fPostTrainPeriod_set
    __swig_getmethods__["fPostTrainPeriod"] = _axon.ABF_DACInfo_fPostTrainPeriod_get
    if _newclass:fPostTrainPeriod = _swig_property(_axon.ABF_DACInfo_fPostTrainPeriod_get, _axon.ABF_DACInfo_fPostTrainPeriod_set)
    __swig_setmethods__["fPostTrainLevel"] = _axon.ABF_DACInfo_fPostTrainLevel_set
    __swig_getmethods__["fPostTrainLevel"] = _axon.ABF_DACInfo_fPostTrainLevel_get
    if _newclass:fPostTrainLevel = _swig_property(_axon.ABF_DACInfo_fPostTrainLevel_get, _axon.ABF_DACInfo_fPostTrainLevel_set)
    __swig_setmethods__["nMembTestEnable"] = _axon.ABF_DACInfo_nMembTestEnable_set
    __swig_getmethods__["nMembTestEnable"] = _axon.ABF_DACInfo_nMembTestEnable_get
    if _newclass:nMembTestEnable = _swig_property(_axon.ABF_DACInfo_nMembTestEnable_get, _axon.ABF_DACInfo_nMembTestEnable_set)
    __swig_setmethods__["nLeakSubtractType"] = _axon.ABF_DACInfo_nLeakSubtractType_set
    __swig_getmethods__["nLeakSubtractType"] = _axon.ABF_DACInfo_nLeakSubtractType_get
    if _newclass:nLeakSubtractType = _swig_property(_axon.ABF_DACInfo_nLeakSubtractType_get, _axon.ABF_DACInfo_nLeakSubtractType_set)
    __swig_setmethods__["nPNPolarity"] = _axon.ABF_DACInfo_nPNPolarity_set
    __swig_getmethods__["nPNPolarity"] = _axon.ABF_DACInfo_nPNPolarity_get
    if _newclass:nPNPolarity = _swig_property(_axon.ABF_DACInfo_nPNPolarity_get, _axon.ABF_DACInfo_nPNPolarity_set)
    __swig_setmethods__["fPNHoldingLevel"] = _axon.ABF_DACInfo_fPNHoldingLevel_set
    __swig_getmethods__["fPNHoldingLevel"] = _axon.ABF_DACInfo_fPNHoldingLevel_get
    if _newclass:fPNHoldingLevel = _swig_property(_axon.ABF_DACInfo_fPNHoldingLevel_get, _axon.ABF_DACInfo_fPNHoldingLevel_set)
    __swig_setmethods__["nPNNumADCChannels"] = _axon.ABF_DACInfo_nPNNumADCChannels_set
    __swig_getmethods__["nPNNumADCChannels"] = _axon.ABF_DACInfo_nPNNumADCChannels_get
    if _newclass:nPNNumADCChannels = _swig_property(_axon.ABF_DACInfo_nPNNumADCChannels_get, _axon.ABF_DACInfo_nPNNumADCChannels_set)
    __swig_setmethods__["nPNPosition"] = _axon.ABF_DACInfo_nPNPosition_set
    __swig_getmethods__["nPNPosition"] = _axon.ABF_DACInfo_nPNPosition_get
    if _newclass:nPNPosition = _swig_property(_axon.ABF_DACInfo_nPNPosition_get, _axon.ABF_DACInfo_nPNPosition_set)
    __swig_setmethods__["nPNNumPulses"] = _axon.ABF_DACInfo_nPNNumPulses_set
    __swig_getmethods__["nPNNumPulses"] = _axon.ABF_DACInfo_nPNNumPulses_get
    if _newclass:nPNNumPulses = _swig_property(_axon.ABF_DACInfo_nPNNumPulses_get, _axon.ABF_DACInfo_nPNNumPulses_set)
    __swig_setmethods__["fPNSettlingTime"] = _axon.ABF_DACInfo_fPNSettlingTime_set
    __swig_getmethods__["fPNSettlingTime"] = _axon.ABF_DACInfo_fPNSettlingTime_get
    if _newclass:fPNSettlingTime = _swig_property(_axon.ABF_DACInfo_fPNSettlingTime_get, _axon.ABF_DACInfo_fPNSettlingTime_set)
    __swig_setmethods__["fPNInterpulse"] = _axon.ABF_DACInfo_fPNInterpulse_set
    __swig_getmethods__["fPNInterpulse"] = _axon.ABF_DACInfo_fPNInterpulse_get
    if _newclass:fPNInterpulse = _swig_property(_axon.ABF_DACInfo_fPNInterpulse_get, _axon.ABF_DACInfo_fPNInterpulse_set)
    __swig_setmethods__["nLTPUsageOfDAC"] = _axon.ABF_DACInfo_nLTPUsageOfDAC_set
    __swig_getmethods__["nLTPUsageOfDAC"] = _axon.ABF_DACInfo_nLTPUsageOfDAC_get
    if _newclass:nLTPUsageOfDAC = _swig_property(_axon.ABF_DACInfo_nLTPUsageOfDAC_get, _axon.ABF_DACInfo_nLTPUsageOfDAC_set)
    __swig_setmethods__["nLTPPresynapticPulses"] = _axon.ABF_DACInfo_nLTPPresynapticPulses_set
    __swig_getmethods__["nLTPPresynapticPulses"] = _axon.ABF_DACInfo_nLTPPresynapticPulses_get
    if _newclass:nLTPPresynapticPulses = _swig_property(_axon.ABF_DACInfo_nLTPPresynapticPulses_get, _axon.ABF_DACInfo_nLTPPresynapticPulses_set)
    __swig_setmethods__["lDACFilePathIndex"] = _axon.ABF_DACInfo_lDACFilePathIndex_set
    __swig_getmethods__["lDACFilePathIndex"] = _axon.ABF_DACInfo_lDACFilePathIndex_get
    if _newclass:lDACFilePathIndex = _swig_property(_axon.ABF_DACInfo_lDACFilePathIndex_get, _axon.ABF_DACInfo_lDACFilePathIndex_set)
    __swig_setmethods__["fMembTestPreSettlingTimeMS"] = _axon.ABF_DACInfo_fMembTestPreSettlingTimeMS_set
    __swig_getmethods__["fMembTestPreSettlingTimeMS"] = _axon.ABF_DACInfo_fMembTestPreSettlingTimeMS_get
    if _newclass:fMembTestPreSettlingTimeMS = _swig_property(_axon.ABF_DACInfo_fMembTestPreSettlingTimeMS_get, _axon.ABF_DACInfo_fMembTestPreSettlingTimeMS_set)
    __swig_setmethods__["fMembTestPostSettlingTimeMS"] = _axon.ABF_DACInfo_fMembTestPostSettlingTimeMS_set
    __swig_getmethods__["fMembTestPostSettlingTimeMS"] = _axon.ABF_DACInfo_fMembTestPostSettlingTimeMS_get
    if _newclass:fMembTestPostSettlingTimeMS = _swig_property(_axon.ABF_DACInfo_fMembTestPostSettlingTimeMS_get, _axon.ABF_DACInfo_fMembTestPostSettlingTimeMS_set)
    __swig_setmethods__["nLeakSubtractADCIndex"] = _axon.ABF_DACInfo_nLeakSubtractADCIndex_set
    __swig_getmethods__["nLeakSubtractADCIndex"] = _axon.ABF_DACInfo_nLeakSubtractADCIndex_get
    if _newclass:nLeakSubtractADCIndex = _swig_property(_axon.ABF_DACInfo_nLeakSubtractADCIndex_get, _axon.ABF_DACInfo_nLeakSubtractADCIndex_set)
    __swig_setmethods__["sUnused"] = _axon.ABF_DACInfo_sUnused_set
    __swig_getmethods__["sUnused"] = _axon.ABF_DACInfo_sUnused_get
    if _newclass:sUnused = _swig_property(_axon.ABF_DACInfo_sUnused_get, _axon.ABF_DACInfo_sUnused_set)
    def __init__(self): 
        this = _axon.new_ABF_DACInfo()
        try: self.this.append(this)
        except: self.this = this
    __swig_destroy__ = _axon.delete_ABF_DACInfo
    __del__ = lambda self : None;
ABF_DACInfo_swigregister = _axon.ABF_DACInfo_swigregister
ABF_DACInfo_swigregister(ABF_DACInfo)

class ABF_EpochInfoPerDAC(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, ABF_EpochInfoPerDAC, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, ABF_EpochInfoPerDAC, name)
    __repr__ = _swig_repr
    __swig_setmethods__["nEpochNum"] = _axon.ABF_EpochInfoPerDAC_nEpochNum_set
    __swig_getmethods__["nEpochNum"] = _axon.ABF_EpochInfoPerDAC_nEpochNum_get
    if _newclass:nEpochNum = _swig_property(_axon.ABF_EpochInfoPerDAC_nEpochNum_get, _axon.ABF_EpochInfoPerDAC_nEpochNum_set)
    __swig_setmethods__["nDACNum"] = _axon.ABF_EpochInfoPerDAC_nDACNum_set
    __swig_getmethods__["nDACNum"] = _axon.ABF_EpochInfoPerDAC_nDACNum_get
    if _newclass:nDACNum = _swig_property(_axon.ABF_EpochInfoPerDAC_nDACNum_get, _axon.ABF_EpochInfoPerDAC_nDACNum_set)
    __swig_setmethods__["nEpochType"] = _axon.ABF_EpochInfoPerDAC_nEpochType_set
    __swig_getmethods__["nEpochType"] = _axon.ABF_EpochInfoPerDAC_nEpochType_get
    if _newclass:nEpochType = _swig_property(_axon.ABF_EpochInfoPerDAC_nEpochType_get, _axon.ABF_EpochInfoPerDAC_nEpochType_set)
    __swig_setmethods__["fEpochInitLevel"] = _axon.ABF_EpochInfoPerDAC_fEpochInitLevel_set
    __swig_getmethods__["fEpochInitLevel"] = _axon.ABF_EpochInfoPerDAC_fEpochInitLevel_get
    if _newclass:fEpochInitLevel = _swig_property(_axon.ABF_EpochInfoPerDAC_fEpochInitLevel_get, _axon.ABF_EpochInfoPerDAC_fEpochInitLevel_set)
    __swig_setmethods__["fEpochLevelInc"] = _axon.ABF_EpochInfoPerDAC_fEpochLevelInc_set
    __swig_getmethods__["fEpochLevelInc"] = _axon.ABF_EpochInfoPerDAC_fEpochLevelInc_get
    if _newclass:fEpochLevelInc = _swig_property(_axon.ABF_EpochInfoPerDAC_fEpochLevelInc_get, _axon.ABF_EpochInfoPerDAC_fEpochLevelInc_set)
    __swig_setmethods__["lEpochInitDuration"] = _axon.ABF_EpochInfoPerDAC_lEpochInitDuration_set
    __swig_getmethods__["lEpochInitDuration"] = _axon.ABF_EpochInfoPerDAC_lEpochInitDuration_get
    if _newclass:lEpochInitDuration = _swig_property(_axon.ABF_EpochInfoPerDAC_lEpochInitDuration_get, _axon.ABF_EpochInfoPerDAC_lEpochInitDuration_set)
    __swig_setmethods__["lEpochDurationInc"] = _axon.ABF_EpochInfoPerDAC_lEpochDurationInc_set
    __swig_getmethods__["lEpochDurationInc"] = _axon.ABF_EpochInfoPerDAC_lEpochDurationInc_get
    if _newclass:lEpochDurationInc = _swig_property(_axon.ABF_EpochInfoPerDAC_lEpochDurationInc_get, _axon.ABF_EpochInfoPerDAC_lEpochDurationInc_set)
    __swig_setmethods__["lEpochPulsePeriod"] = _axon.ABF_EpochInfoPerDAC_lEpochPulsePeriod_set
    __swig_getmethods__["lEpochPulsePeriod"] = _axon.ABF_EpochInfoPerDAC_lEpochPulsePeriod_get
    if _newclass:lEpochPulsePeriod = _swig_property(_axon.ABF_EpochInfoPerDAC_lEpochPulsePeriod_get, _axon.ABF_EpochInfoPerDAC_lEpochPulsePeriod_set)
    __swig_setmethods__["lEpochPulseWidth"] = _axon.ABF_EpochInfoPerDAC_lEpochPulseWidth_set
    __swig_getmethods__["lEpochPulseWidth"] = _axon.ABF_EpochInfoPerDAC_lEpochPulseWidth_get
    if _newclass:lEpochPulseWidth = _swig_property(_axon.ABF_EpochInfoPerDAC_lEpochPulseWidth_get, _axon.ABF_EpochInfoPerDAC_lEpochPulseWidth_set)
    __swig_setmethods__["sUnused"] = _axon.ABF_EpochInfoPerDAC_sUnused_set
    __swig_getmethods__["sUnused"] = _axon.ABF_EpochInfoPerDAC_sUnused_get
    if _newclass:sUnused = _swig_property(_axon.ABF_EpochInfoPerDAC_sUnused_get, _axon.ABF_EpochInfoPerDAC_sUnused_set)
    def __init__(self): 
        this = _axon.new_ABF_EpochInfoPerDAC()
        try: self.this.append(this)
        except: self.this = this
    __swig_destroy__ = _axon.delete_ABF_EpochInfoPerDAC
    __del__ = lambda self : None;
ABF_EpochInfoPerDAC_swigregister = _axon.ABF_EpochInfoPerDAC_swigregister
ABF_EpochInfoPerDAC_swigregister(ABF_EpochInfoPerDAC)

class ABF_EpochInfo(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, ABF_EpochInfo, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, ABF_EpochInfo, name)
    __repr__ = _swig_repr
    __swig_setmethods__["nEpochNum"] = _axon.ABF_EpochInfo_nEpochNum_set
    __swig_getmethods__["nEpochNum"] = _axon.ABF_EpochInfo_nEpochNum_get
    if _newclass:nEpochNum = _swig_property(_axon.ABF_EpochInfo_nEpochNum_get, _axon.ABF_EpochInfo_nEpochNum_set)
    __swig_setmethods__["nDigitalValue"] = _axon.ABF_EpochInfo_nDigitalValue_set
    __swig_getmethods__["nDigitalValue"] = _axon.ABF_EpochInfo_nDigitalValue_get
    if _newclass:nDigitalValue = _swig_property(_axon.ABF_EpochInfo_nDigitalValue_get, _axon.ABF_EpochInfo_nDigitalValue_set)
    __swig_setmethods__["nDigitalTrainValue"] = _axon.ABF_EpochInfo_nDigitalTrainValue_set
    __swig_getmethods__["nDigitalTrainValue"] = _axon.ABF_EpochInfo_nDigitalTrainValue_get
    if _newclass:nDigitalTrainValue = _swig_property(_axon.ABF_EpochInfo_nDigitalTrainValue_get, _axon.ABF_EpochInfo_nDigitalTrainValue_set)
    __swig_setmethods__["nAlternateDigitalValue"] = _axon.ABF_EpochInfo_nAlternateDigitalValue_set
    __swig_getmethods__["nAlternateDigitalValue"] = _axon.ABF_EpochInfo_nAlternateDigitalValue_get
    if _newclass:nAlternateDigitalValue = _swig_property(_axon.ABF_EpochInfo_nAlternateDigitalValue_get, _axon.ABF_EpochInfo_nAlternateDigitalValue_set)
    __swig_setmethods__["nAlternateDigitalTrainValue"] = _axon.ABF_EpochInfo_nAlternateDigitalTrainValue_set
    __swig_getmethods__["nAlternateDigitalTrainValue"] = _axon.ABF_EpochInfo_nAlternateDigitalTrainValue_get
    if _newclass:nAlternateDigitalTrainValue = _swig_property(_axon.ABF_EpochInfo_nAlternateDigitalTrainValue_get, _axon.ABF_EpochInfo_nAlternateDigitalTrainValue_set)
    __swig_setmethods__["bEpochCompression"] = _axon.ABF_EpochInfo_bEpochCompression_set
    __swig_getmethods__["bEpochCompression"] = _axon.ABF_EpochInfo_bEpochCompression_get
    if _newclass:bEpochCompression = _swig_property(_axon.ABF_EpochInfo_bEpochCompression_get, _axon.ABF_EpochInfo_bEpochCompression_set)
    __swig_setmethods__["sUnused"] = _axon.ABF_EpochInfo_sUnused_set
    __swig_getmethods__["sUnused"] = _axon.ABF_EpochInfo_sUnused_get
    if _newclass:sUnused = _swig_property(_axon.ABF_EpochInfo_sUnused_get, _axon.ABF_EpochInfo_sUnused_set)
    def __init__(self): 
        this = _axon.new_ABF_EpochInfo()
        try: self.this.append(this)
        except: self.this = this
    __swig_destroy__ = _axon.delete_ABF_EpochInfo
    __del__ = lambda self : None;
ABF_EpochInfo_swigregister = _axon.ABF_EpochInfo_swigregister
ABF_EpochInfo_swigregister(ABF_EpochInfo)

class ABF_StatsRegionInfo(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, ABF_StatsRegionInfo, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, ABF_StatsRegionInfo, name)
    __repr__ = _swig_repr
    __swig_setmethods__["nRegionNum"] = _axon.ABF_StatsRegionInfo_nRegionNum_set
    __swig_getmethods__["nRegionNum"] = _axon.ABF_StatsRegionInfo_nRegionNum_get
    if _newclass:nRegionNum = _swig_property(_axon.ABF_StatsRegionInfo_nRegionNum_get, _axon.ABF_StatsRegionInfo_nRegionNum_set)
    __swig_setmethods__["nADCNum"] = _axon.ABF_StatsRegionInfo_nADCNum_set
    __swig_getmethods__["nADCNum"] = _axon.ABF_StatsRegionInfo_nADCNum_get
    if _newclass:nADCNum = _swig_property(_axon.ABF_StatsRegionInfo_nADCNum_get, _axon.ABF_StatsRegionInfo_nADCNum_set)
    __swig_setmethods__["nStatsActiveChannels"] = _axon.ABF_StatsRegionInfo_nStatsActiveChannels_set
    __swig_getmethods__["nStatsActiveChannels"] = _axon.ABF_StatsRegionInfo_nStatsActiveChannels_get
    if _newclass:nStatsActiveChannels = _swig_property(_axon.ABF_StatsRegionInfo_nStatsActiveChannels_get, _axon.ABF_StatsRegionInfo_nStatsActiveChannels_set)
    __swig_setmethods__["nStatsSearchRegionFlags"] = _axon.ABF_StatsRegionInfo_nStatsSearchRegionFlags_set
    __swig_getmethods__["nStatsSearchRegionFlags"] = _axon.ABF_StatsRegionInfo_nStatsSearchRegionFlags_get
    if _newclass:nStatsSearchRegionFlags = _swig_property(_axon.ABF_StatsRegionInfo_nStatsSearchRegionFlags_get, _axon.ABF_StatsRegionInfo_nStatsSearchRegionFlags_set)
    __swig_setmethods__["nStatsSelectedRegion"] = _axon.ABF_StatsRegionInfo_nStatsSelectedRegion_set
    __swig_getmethods__["nStatsSelectedRegion"] = _axon.ABF_StatsRegionInfo_nStatsSelectedRegion_get
    if _newclass:nStatsSelectedRegion = _swig_property(_axon.ABF_StatsRegionInfo_nStatsSelectedRegion_get, _axon.ABF_StatsRegionInfo_nStatsSelectedRegion_set)
    __swig_setmethods__["nStatsSmoothing"] = _axon.ABF_StatsRegionInfo_nStatsSmoothing_set
    __swig_getmethods__["nStatsSmoothing"] = _axon.ABF_StatsRegionInfo_nStatsSmoothing_get
    if _newclass:nStatsSmoothing = _swig_property(_axon.ABF_StatsRegionInfo_nStatsSmoothing_get, _axon.ABF_StatsRegionInfo_nStatsSmoothing_set)
    __swig_setmethods__["nStatsSmoothingEnable"] = _axon.ABF_StatsRegionInfo_nStatsSmoothingEnable_set
    __swig_getmethods__["nStatsSmoothingEnable"] = _axon.ABF_StatsRegionInfo_nStatsSmoothingEnable_get
    if _newclass:nStatsSmoothingEnable = _swig_property(_axon.ABF_StatsRegionInfo_nStatsSmoothingEnable_get, _axon.ABF_StatsRegionInfo_nStatsSmoothingEnable_set)
    __swig_setmethods__["nStatsBaseline"] = _axon.ABF_StatsRegionInfo_nStatsBaseline_set
    __swig_getmethods__["nStatsBaseline"] = _axon.ABF_StatsRegionInfo_nStatsBaseline_get
    if _newclass:nStatsBaseline = _swig_property(_axon.ABF_StatsRegionInfo_nStatsBaseline_get, _axon.ABF_StatsRegionInfo_nStatsBaseline_set)
    __swig_setmethods__["lStatsBaselineStart"] = _axon.ABF_StatsRegionInfo_lStatsBaselineStart_set
    __swig_getmethods__["lStatsBaselineStart"] = _axon.ABF_StatsRegionInfo_lStatsBaselineStart_get
    if _newclass:lStatsBaselineStart = _swig_property(_axon.ABF_StatsRegionInfo_lStatsBaselineStart_get, _axon.ABF_StatsRegionInfo_lStatsBaselineStart_set)
    __swig_setmethods__["lStatsBaselineEnd"] = _axon.ABF_StatsRegionInfo_lStatsBaselineEnd_set
    __swig_getmethods__["lStatsBaselineEnd"] = _axon.ABF_StatsRegionInfo_lStatsBaselineEnd_get
    if _newclass:lStatsBaselineEnd = _swig_property(_axon.ABF_StatsRegionInfo_lStatsBaselineEnd_get, _axon.ABF_StatsRegionInfo_lStatsBaselineEnd_set)
    __swig_setmethods__["lStatsMeasurements"] = _axon.ABF_StatsRegionInfo_lStatsMeasurements_set
    __swig_getmethods__["lStatsMeasurements"] = _axon.ABF_StatsRegionInfo_lStatsMeasurements_get
    if _newclass:lStatsMeasurements = _swig_property(_axon.ABF_StatsRegionInfo_lStatsMeasurements_get, _axon.ABF_StatsRegionInfo_lStatsMeasurements_set)
    __swig_setmethods__["lStatsStart"] = _axon.ABF_StatsRegionInfo_lStatsStart_set
    __swig_getmethods__["lStatsStart"] = _axon.ABF_StatsRegionInfo_lStatsStart_get
    if _newclass:lStatsStart = _swig_property(_axon.ABF_StatsRegionInfo_lStatsStart_get, _axon.ABF_StatsRegionInfo_lStatsStart_set)
    __swig_setmethods__["lStatsEnd"] = _axon.ABF_StatsRegionInfo_lStatsEnd_set
    __swig_getmethods__["lStatsEnd"] = _axon.ABF_StatsRegionInfo_lStatsEnd_get
    if _newclass:lStatsEnd = _swig_property(_axon.ABF_StatsRegionInfo_lStatsEnd_get, _axon.ABF_StatsRegionInfo_lStatsEnd_set)
    __swig_setmethods__["nRiseBottomPercentile"] = _axon.ABF_StatsRegionInfo_nRiseBottomPercentile_set
    __swig_getmethods__["nRiseBottomPercentile"] = _axon.ABF_StatsRegionInfo_nRiseBottomPercentile_get
    if _newclass:nRiseBottomPercentile = _swig_property(_axon.ABF_StatsRegionInfo_nRiseBottomPercentile_get, _axon.ABF_StatsRegionInfo_nRiseBottomPercentile_set)
    __swig_setmethods__["nRiseTopPercentile"] = _axon.ABF_StatsRegionInfo_nRiseTopPercentile_set
    __swig_getmethods__["nRiseTopPercentile"] = _axon.ABF_StatsRegionInfo_nRiseTopPercentile_get
    if _newclass:nRiseTopPercentile = _swig_property(_axon.ABF_StatsRegionInfo_nRiseTopPercentile_get, _axon.ABF_StatsRegionInfo_nRiseTopPercentile_set)
    __swig_setmethods__["nDecayBottomPercentile"] = _axon.ABF_StatsRegionInfo_nDecayBottomPercentile_set
    __swig_getmethods__["nDecayBottomPercentile"] = _axon.ABF_StatsRegionInfo_nDecayBottomPercentile_get
    if _newclass:nDecayBottomPercentile = _swig_property(_axon.ABF_StatsRegionInfo_nDecayBottomPercentile_get, _axon.ABF_StatsRegionInfo_nDecayBottomPercentile_set)
    __swig_setmethods__["nDecayTopPercentile"] = _axon.ABF_StatsRegionInfo_nDecayTopPercentile_set
    __swig_getmethods__["nDecayTopPercentile"] = _axon.ABF_StatsRegionInfo_nDecayTopPercentile_get
    if _newclass:nDecayTopPercentile = _swig_property(_axon.ABF_StatsRegionInfo_nDecayTopPercentile_get, _axon.ABF_StatsRegionInfo_nDecayTopPercentile_set)
    __swig_setmethods__["nStatsSearchMode"] = _axon.ABF_StatsRegionInfo_nStatsSearchMode_set
    __swig_getmethods__["nStatsSearchMode"] = _axon.ABF_StatsRegionInfo_nStatsSearchMode_get
    if _newclass:nStatsSearchMode = _swig_property(_axon.ABF_StatsRegionInfo_nStatsSearchMode_get, _axon.ABF_StatsRegionInfo_nStatsSearchMode_set)
    __swig_setmethods__["nStatsSearchDAC"] = _axon.ABF_StatsRegionInfo_nStatsSearchDAC_set
    __swig_getmethods__["nStatsSearchDAC"] = _axon.ABF_StatsRegionInfo_nStatsSearchDAC_get
    if _newclass:nStatsSearchDAC = _swig_property(_axon.ABF_StatsRegionInfo_nStatsSearchDAC_get, _axon.ABF_StatsRegionInfo_nStatsSearchDAC_set)
    __swig_setmethods__["nStatsBaselineDAC"] = _axon.ABF_StatsRegionInfo_nStatsBaselineDAC_set
    __swig_getmethods__["nStatsBaselineDAC"] = _axon.ABF_StatsRegionInfo_nStatsBaselineDAC_get
    if _newclass:nStatsBaselineDAC = _swig_property(_axon.ABF_StatsRegionInfo_nStatsBaselineDAC_get, _axon.ABF_StatsRegionInfo_nStatsBaselineDAC_set)
    __swig_setmethods__["sUnused"] = _axon.ABF_StatsRegionInfo_sUnused_set
    __swig_getmethods__["sUnused"] = _axon.ABF_StatsRegionInfo_sUnused_get
    if _newclass:sUnused = _swig_property(_axon.ABF_StatsRegionInfo_sUnused_get, _axon.ABF_StatsRegionInfo_sUnused_set)
    def __init__(self): 
        this = _axon.new_ABF_StatsRegionInfo()
        try: self.this.append(this)
        except: self.this = this
    __swig_destroy__ = _axon.delete_ABF_StatsRegionInfo
    __del__ = lambda self : None;
ABF_StatsRegionInfo_swigregister = _axon.ABF_StatsRegionInfo_swigregister
ABF_StatsRegionInfo_swigregister(ABF_StatsRegionInfo)

class ABF_UserListInfo(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, ABF_UserListInfo, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, ABF_UserListInfo, name)
    __repr__ = _swig_repr
    __swig_setmethods__["nListNum"] = _axon.ABF_UserListInfo_nListNum_set
    __swig_getmethods__["nListNum"] = _axon.ABF_UserListInfo_nListNum_get
    if _newclass:nListNum = _swig_property(_axon.ABF_UserListInfo_nListNum_get, _axon.ABF_UserListInfo_nListNum_set)
    __swig_setmethods__["nULEnable"] = _axon.ABF_UserListInfo_nULEnable_set
    __swig_getmethods__["nULEnable"] = _axon.ABF_UserListInfo_nULEnable_get
    if _newclass:nULEnable = _swig_property(_axon.ABF_UserListInfo_nULEnable_get, _axon.ABF_UserListInfo_nULEnable_set)
    __swig_setmethods__["nULParamToVary"] = _axon.ABF_UserListInfo_nULParamToVary_set
    __swig_getmethods__["nULParamToVary"] = _axon.ABF_UserListInfo_nULParamToVary_get
    if _newclass:nULParamToVary = _swig_property(_axon.ABF_UserListInfo_nULParamToVary_get, _axon.ABF_UserListInfo_nULParamToVary_set)
    __swig_setmethods__["nULRepeat"] = _axon.ABF_UserListInfo_nULRepeat_set
    __swig_getmethods__["nULRepeat"] = _axon.ABF_UserListInfo_nULRepeat_get
    if _newclass:nULRepeat = _swig_property(_axon.ABF_UserListInfo_nULRepeat_get, _axon.ABF_UserListInfo_nULRepeat_set)
    __swig_setmethods__["lULParamValueListIndex"] = _axon.ABF_UserListInfo_lULParamValueListIndex_set
    __swig_getmethods__["lULParamValueListIndex"] = _axon.ABF_UserListInfo_lULParamValueListIndex_get
    if _newclass:lULParamValueListIndex = _swig_property(_axon.ABF_UserListInfo_lULParamValueListIndex_get, _axon.ABF_UserListInfo_lULParamValueListIndex_set)
    __swig_setmethods__["sUnused"] = _axon.ABF_UserListInfo_sUnused_set
    __swig_getmethods__["sUnused"] = _axon.ABF_UserListInfo_sUnused_get
    if _newclass:sUnused = _swig_property(_axon.ABF_UserListInfo_sUnused_get, _axon.ABF_UserListInfo_sUnused_set)
    def __init__(self): 
        this = _axon.new_ABF_UserListInfo()
        try: self.this.append(this)
        except: self.this = this
    __swig_destroy__ = _axon.delete_ABF_UserListInfo
    __del__ = lambda self : None;
ABF_UserListInfo_swigregister = _axon.ABF_UserListInfo_swigregister
ABF_UserListInfo_swigregister(ABF_UserListInfo)

class ABF_SynchArray(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, ABF_SynchArray, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, ABF_SynchArray, name)
    __repr__ = _swig_repr
    __swig_setmethods__["lStart"] = _axon.ABF_SynchArray_lStart_set
    __swig_getmethods__["lStart"] = _axon.ABF_SynchArray_lStart_get
    if _newclass:lStart = _swig_property(_axon.ABF_SynchArray_lStart_get, _axon.ABF_SynchArray_lStart_set)
    __swig_setmethods__["lLength"] = _axon.ABF_SynchArray_lLength_set
    __swig_getmethods__["lLength"] = _axon.ABF_SynchArray_lLength_get
    if _newclass:lLength = _swig_property(_axon.ABF_SynchArray_lLength_get, _axon.ABF_SynchArray_lLength_set)
    def __init__(self): 
        this = _axon.new_ABF_SynchArray()
        try: self.this.append(this)
        except: self.this = this
    __swig_destroy__ = _axon.delete_ABF_SynchArray
    __del__ = lambda self : None;
ABF_SynchArray_swigregister = _axon.ABF_SynchArray_swigregister
ABF_SynchArray_swigregister(ABF_SynchArray)

class VectSynchArray(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, VectSynchArray, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, VectSynchArray, name)
    __repr__ = _swig_repr
    def iterator(self): return _axon.VectSynchArray_iterator(self)
    def __iter__(self): return self.iterator()
    def __nonzero__(self): return _axon.VectSynchArray___nonzero__(self)
    def __bool__(self): return _axon.VectSynchArray___bool__(self)
    def __len__(self): return _axon.VectSynchArray___len__(self)
    def pop(self): return _axon.VectSynchArray_pop(self)
    def __getslice__(self, *args): return _axon.VectSynchArray___getslice__(self, *args)
    def __setslice__(self, *args): return _axon.VectSynchArray___setslice__(self, *args)
    def __delslice__(self, *args): return _axon.VectSynchArray___delslice__(self, *args)
    def __delitem__(self, *args): return _axon.VectSynchArray___delitem__(self, *args)
    def __getitem__(self, *args): return _axon.VectSynchArray___getitem__(self, *args)
    def __setitem__(self, *args): return _axon.VectSynchArray___setitem__(self, *args)
    def append(self, *args): return _axon.VectSynchArray_append(self, *args)
    def empty(self): return _axon.VectSynchArray_empty(self)
    def size(self): return _axon.VectSynchArray_size(self)
    def clear(self): return _axon.VectSynchArray_clear(self)
    def swap(self, *args): return _axon.VectSynchArray_swap(self, *args)
    def get_allocator(self): return _axon.VectSynchArray_get_allocator(self)
    def begin(self): return _axon.VectSynchArray_begin(self)
    def end(self): return _axon.VectSynchArray_end(self)
    def rbegin(self): return _axon.VectSynchArray_rbegin(self)
    def rend(self): return _axon.VectSynchArray_rend(self)
    def pop_back(self): return _axon.VectSynchArray_pop_back(self)
    def erase(self, *args): return _axon.VectSynchArray_erase(self, *args)
    def __init__(self, *args): 
        this = _axon.new_VectSynchArray(*args)
        try: self.this.append(this)
        except: self.this = this
    def push_back(self, *args): return _axon.VectSynchArray_push_back(self, *args)
    def front(self): return _axon.VectSynchArray_front(self)
    def back(self): return _axon.VectSynchArray_back(self)
    def assign(self, *args): return _axon.VectSynchArray_assign(self, *args)
    def resize(self, *args): return _axon.VectSynchArray_resize(self, *args)
    def insert(self, *args): return _axon.VectSynchArray_insert(self, *args)
    def reserve(self, *args): return _axon.VectSynchArray_reserve(self, *args)
    def capacity(self): return _axon.VectSynchArray_capacity(self)
    __swig_destroy__ = _axon.delete_VectSynchArray
    __del__ = lambda self : None;
VectSynchArray_swigregister = _axon.VectSynchArray_swigregister
VectSynchArray_swigregister(VectSynchArray)

AXON_ERROR_NO_NAME = _axon.AXON_ERROR_NO_NAME
AXON_ERROR_NO_HANDLE = _axon.AXON_ERROR_NO_HANDLE
AXON_ERROR_NO_FILEINFO = _axon.AXON_ERROR_NO_FILEINFO
AXON_ERROR_WRONG_TYPE = _axon.AXON_ERROR_WRONG_TYPE
AXON_INFO_OK = _axon.AXON_INFO_OK
AXON_INFO_NO_SECTION = _axon.AXON_INFO_NO_SECTION
class ABF(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, ABF, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, ABF, name)
    __repr__ = _swig_repr
    __swig_setmethods__["FileInfo"] = _axon.ABF_FileInfo_set
    __swig_getmethods__["FileInfo"] = _axon.ABF_FileInfo_get
    if _newclass:FileInfo = _swig_property(_axon.ABF_FileInfo_get, _axon.ABF_FileInfo_set)
    __swig_setmethods__["ProtocolInfo"] = _axon.ABF_ProtocolInfo_set
    __swig_getmethods__["ProtocolInfo"] = _axon.ABF_ProtocolInfo_get
    if _newclass:ProtocolInfo = _swig_property(_axon.ABF_ProtocolInfo_get, _axon.ABF_ProtocolInfo_set)
    __swig_setmethods__["ADCInfo"] = _axon.ABF_ADCInfo_set
    __swig_getmethods__["ADCInfo"] = _axon.ABF_ADCInfo_get
    if _newclass:ADCInfo = _swig_property(_axon.ABF_ADCInfo_get, _axon.ABF_ADCInfo_set)
    __swig_setmethods__["DACInfo"] = _axon.ABF_DACInfo_set
    __swig_getmethods__["DACInfo"] = _axon.ABF_DACInfo_get
    if _newclass:DACInfo = _swig_property(_axon.ABF_DACInfo_get, _axon.ABF_DACInfo_set)
    __swig_setmethods__["EpochInfo"] = _axon.ABF_EpochInfo_set
    __swig_getmethods__["EpochInfo"] = _axon.ABF_EpochInfo_get
    if _newclass:EpochInfo = _swig_property(_axon.ABF_EpochInfo_get, _axon.ABF_EpochInfo_set)
    __swig_setmethods__["EpochInfoPerDAC"] = _axon.ABF_EpochInfoPerDAC_set
    __swig_getmethods__["EpochInfoPerDAC"] = _axon.ABF_EpochInfoPerDAC_get
    if _newclass:EpochInfoPerDAC = _swig_property(_axon.ABF_EpochInfoPerDAC_get, _axon.ABF_EpochInfoPerDAC_set)
    __swig_setmethods__["Strings"] = _axon.ABF_Strings_set
    __swig_getmethods__["Strings"] = _axon.ABF_Strings_get
    if _newclass:Strings = _swig_property(_axon.ABF_Strings_get, _axon.ABF_Strings_set)
    __swig_setmethods__["SynchArray"] = _axon.ABF_SynchArray_set
    __swig_getmethods__["SynchArray"] = _axon.ABF_SynchArray_get
    if _newclass:SynchArray = _swig_property(_axon.ABF_SynchArray_get, _axon.ABF_SynchArray_set)
    def __init__(self, *args): 
        this = _axon.new_ABF(*args)
        try: self.this.append(this)
        except: self.this = this
    __swig_destroy__ = _axon.delete_ABF
    __del__ = lambda self : None;
    def Open(self, *args): return _axon.ABF_Open(self, *args)
    def Close(self): return _axon.ABF_Close(self)
    def ReadFileInfo(self): return _axon.ABF_ReadFileInfo(self)
    def ReadProtocolInfo(self): return _axon.ABF_ReadProtocolInfo(self)
    def ReadADCInfo(self): return _axon.ABF_ReadADCInfo(self)
    def ReadDACInfo(self): return _axon.ABF_ReadDACInfo(self)
    def ReadEpochInfo(self): return _axon.ABF_ReadEpochInfo(self)
    def ReadEpochInfoPerDAC(self): return _axon.ABF_ReadEpochInfoPerDAC(self)
    def ReadStrings(self): return _axon.ABF_ReadStrings(self)
    def GetString(self, *args): return _axon.ABF_GetString(self, *args)
    def ReadSynchArray(self): return _axon.ABF_ReadSynchArray(self)
    def ReadAllSections(self): return _axon.ABF_ReadAllSections(self)
    def ReadFloatData(self): return _axon.ABF_ReadFloatData(self)
    def ReadIntData(self): return _axon.ABF_ReadIntData(self)
    def GetADCInfo(self, *args): return _axon.ABF_GetADCInfo(self, *args)
    def GetDACInfo(self, *args): return _axon.ABF_GetDACInfo(self, *args)
    def GetEpochInfo(self, *args): return _axon.ABF_GetEpochInfo(self, *args)
    def GetEpochInfoPerDAC(self, *args): return _axon.ABF_GetEpochInfoPerDAC(self, *args)
    def GetSynchArray(self, *args): return _axon.ABF_GetSynchArray(self, *args)
ABF_swigregister = _axon.ABF_swigregister
ABF_swigregister(ABF)



